[
  {
    "Title": "avanzado",
    "Content": "Aqu\u00ED van las funciones avanzadas..."
  },
  {
    "Title": "intro",
    "Content": "Bienvenido a la documentaci\u00F3n de GDSU."
  },
  {
    "Title": "uso_basico",
    "Content": "Aqu\u00ED van las instrucciones b\u00E1sicas..."
  },
  {
    "Title": "documentacion de GDSU",
    "Content": "Resumen de Funcionalidades: Gestor de Scripts Universal\r\n\r\n1. Introducci\u00F3n: Tu Centro de Mando para la Automatizaci\u00F3n\r\n\r\nEl \u0022Gestor de Scripts Universal\u0022 es una herramienta dise\u00F1ada para ser el punto de control central de la automatizaci\u00F3n en entornos de TI. Su prop\u00F3sito principal es simplificar y centralizar tareas complejas de administraci\u00F3n de sistemas a trav\u00E9s de una interfaz gr\u00E1fica amigable y f\u00E1cil de usar. Est\u00E1 especialmente pensado para administradores que se inician en la automatizaci\u00F3n y buscan una forma segura, eficiente y visual de ejecutar operaciones repetitivas sin necesidad de escribir comandos complejos en la consola.\r\n\r\nA trav\u00E9s de su interfaz, la herramienta organiza y ejecuta un potente cat\u00E1logo de scripts, convirtiendo operaciones avanzadas en simples clics de rat\u00F3n.\r\n\r\n2. El Coraz\u00F3n del Sistema: Una Interfaz Intuitiva\r\n\r\nLa efectividad del gestor reside en su dise\u00F1o claro y funcional, que se divide en tres componentes principales para ofrecer una experiencia de usuario fluida y controlada.\r\n\r\n* Panel de Scripts Disponibles: Es el cat\u00E1logo central donde se visualizan todas las herramientas de automatizaci\u00F3n. Los scripts est\u00E1n organizados l\u00F3gicamente en carpetas por categor\u00EDas (gesti\u00F3n de software, seguridad, redes, etc.), lo que permite encontrar y seleccionar r\u00E1pidamente la tarea adecuada para cada necesidad.\r\n* Registro de Actividad (Log): Esta ventana es tu \u0022torre de control\u0022. Muestra en tiempo real cada acci\u00F3n que realiza la herramienta, desde el inicio de un script hasta su finalizaci\u00F3n, incluyendo mensajes de \u00E9xito, advertencias o errores. Este registro detallado es fundamental para monitorear la ejecuci\u00F3n y diagnosticar cualquier problema al instante.\r\n* Botonera de Acciones: Contiene los controles esenciales para operar el sistema. Los botones clave como Ejecutar seleccionados, Refrescar y Cerrar permiten una interacci\u00F3n directa y eficiente. Una de sus caracter\u00EDsticas m\u00E1s potentes es la capacidad de seleccionar m\u00FAltiples scripts, incluso de diferentes categor\u00EDas, y ejecutarlos simult\u00E1neamente en paralelo, optimizando al m\u00E1ximo el tiempo de trabajo.\r\n\r\nEstos componentes trabajan en conjunto para proporcionar acceso a un completo conjunto de capacidades de automatizaci\u00F3n, que se detallan a continuaci\u00F3n.\r\n\r\n3. Cat\u00E1logo de Capacidades de Automatizaci\u00F3n\r\n\r\nEl Gestor de Scripts Universal viene equipado con un robusto conjunto de herramientas listas para usar. A continuaci\u00F3n, se detallan las funcionalidades actualmente disponibles, agrupadas por su \u00E1rea de funci\u00F3n para una mejor comprensi\u00F3n.\r\n\r\n3.1. Gesti\u00F3n de Software y Sistema Operativo\r\n\r\nEstas herramientas se enfocan en mantener el software y el sistema operativo actualizados, seguros y optimizados.\r\n\r\n* Instalaci\u00F3n Silenciosa de Aplicaciones Automatiza la instalaci\u00F3n de software (MSI/EXE) sin requerir ninguna intervenci\u00F3n del usuario. Su principal ventaja es el ahorro masivo de tiempo en despliegues y la garant\u00EDa de que todas las instalaciones se realizan de manera consistente y estandarizada, validando la correcta inscripci\u00F3n del software en el registro tras la instalaci\u00F3n.\r\n* Actualizaci\u00F3n Segura de Software Gestiona el proceso de actualizaci\u00F3n de aplicaciones de forma automatizada, creando primero un backup de la versi\u00F3n actual. Su caracter\u00EDstica m\u00E1s importante es la capacidad de rollback autom\u00E1tico: si una actualizaci\u00F3n falla por cualquier motivo, el script revierte la aplicaci\u00F3n a su estado anterior usando el backup, evitando dejar un programa roto o inestable.\r\n* Inventario de Software Genera una lista completa y detallada de todas las aplicaciones instaladas en el sistema. Clasifica el software seg\u00FAn su origen (instalador MSI, Microsoft Store, aplicaci\u00F3n portable), extrayendo metadatos directamente de los ejecutables para los portables, lo que facilita las auditor\u00EDas y la gesti\u00F3n de licencias.\r\n* Inventario de Hardware Recopila informaci\u00F3n exhaustiva sobre los componentes f\u00EDsicos del sistema, incluyendo CPU, RAM, discos, tarjetas gr\u00E1ficas, detalles de Firmware/BIOS y de la placa base (fabricante, producto y serial). El informe resultante se puede exportar a formatos estructurados como CSV o JSON para su an\u00E1lisis o integraci\u00F3n con sistemas de inventariado.\r\n* Endurecimiento (Hardening) de Windows Mejora la seguridad del sistema operativo deshabilitando protocolos obsoletos y vulnerables como SMBv1 y servicios inseguros como SNMP, Telnet y RemoteRegistry. Ofrece un modo de simulaci\u00F3n (DryRun) para auditar los cambios antes de aplicarlos y genera un snapshot del estado previo para permitir un rollback controlado.\r\n* Optimizaci\u00F3n de Arranque Analiza los programas que se inician con el sistema y mide su impacto real en el rendimiento, capturando su consumo de CPU y RAM durante un per\u00EDodo de muestreo objetivo. Esto permite identificar y deshabilitar de forma segura las aplicaciones no cr\u00EDticas que realmente ralentizan el arranque.\r\n* Limpieza de Cach\u00E9s Libera espacio en disco eliminando archivos temporales y logs antiguos seg\u00FAn pol\u00EDticas configurables de retenci\u00F3n por antig\u00FCedad y tama\u00F1o m\u00EDnimo. Respeta una lista de exclusi\u00F3n para no afectar archivos cr\u00EDticos, garantizando una limpieza segura y efectiva.\r\n\r\nUna vez que el sistema operativo y el software est\u00E1n optimizados y bajo control, el siguiente paso l\u00F3gico es reforzar su seguridad y gestionar el acceso de los usuarios.\r\n\r\n3.2. Seguridad y Administraci\u00F3n de Usuarios\r\n\r\nEste conjunto de herramientas simplifica la gesti\u00F3n de accesos y la configuraci\u00F3n de las defensas del sistema.\r\n\r\n* Creaci\u00F3n de Usuarios Locales Agiliza la creaci\u00F3n de nuevas cuentas de usuario, asegurando el uso de contrase\u00F1as robustas y la asignaci\u00F3n a grupos predefinidos. Utiliza cmdlets modernos, pero cuenta con un fallback al comando net user para garantizar la compatibilidad con sistemas antiguos, demostrando un dise\u00F1o robusto.\r\n* Gesti\u00F3n de Pol\u00EDticas de Firewall Facilita la configuraci\u00F3n del firewall de forma idempotente, lo que previene la acumulaci\u00F3n de reglas duplicadas, un problema com\u00FAn que degrada el rendimiento. Antes y despu\u00E9s de cada cambio, genera snapshots en formato JSON del estado de las reglas, creando una pista de auditor\u00EDa completa e inequ\u00EDvoca.\r\n* Gesti\u00F3n de Procesos Identifica procesos problem\u00E1ticos bas\u00E1ndose en criterios objetivos y medibles: aquellos que no responden a la interfaz gr\u00E1fica, los que muestran cero actividad de CPU durante un per\u00EDodo de muestreo (ZeroCPU), o los que han excedido un tiempo m\u00E1ximo de ejecuci\u00F3n predefinido (ExceededRuntime). Respeta una lista blanca de procesos cr\u00EDticos para evitar afectar al sistema.\r\n\r\nUna vez que el sistema est\u00E1 asegurado y el acceso controlado, la prioridad se desplaza hacia la protecci\u00F3n de los datos y la garant\u00EDa de la continuidad del negocio.\r\n\r\n3.3. Gesti\u00F3n de Datos y Continuidad del Negocio\r\n\r\nEstas funcionalidades son cruciales para proteger la informaci\u00F3n y asegurar una r\u00E1pida recuperaci\u00F3n ante cualquier imprevisto.\r\n\r\n* Backup Incremental Crea copias de seguridad versionadas que solo guardan los cambios. Cada versi\u00F3n es un snapshot autocontenido que incluye un manifiesto (manifest.json) y un cat\u00E1logo de archivos (catalog.csv), proporcionando un inventario detallado y legible por m\u00E1quina para auditor\u00EDas y restauraciones precisas.\r\n* Restauraci\u00F3n R\u00E1pida Permite restaurar archivos o perfiles desde una versi\u00F3n de backup espec\u00EDfica, utilizando el cat\u00E1logo para una selecci\u00F3n precisa. Incluye una verificaci\u00F3n de integridad mediante checksums para asegurar que los datos recuperados son una copia fiel y no est\u00E1n corruptos.\r\n* Sincronizaci\u00F3n de Carpetas Mantiene dos carpetas id\u00E9nticas utilizando la potencia de Robocopy en modo Espejo (Mirror), que no solo copia archivos nuevos, sino que tambi\u00E9n elimina del destino aquellos que ya no existen en el origen. Verifica la integridad de los archivos copiados mediante checksums para garantizar una r\u00E9plica perfecta.\r\n* Rotaci\u00F3n de Logs Automatiza el mantenimiento de archivos de registro, comprimiendo los antiguos y purgando los m\u00E1s viejos seg\u00FAn pol\u00EDticas de retenci\u00F3n. Incluye un modo de simulaci\u00F3n (DryRun) para validar las acciones antes de ejecutarlas, evitando la eliminaci\u00F3n accidental de datos.\r\n\r\nLa gesti\u00F3n de datos a menudo depende de los servicios de red, que tambi\u00E9n pueden ser administrados con el gestor.\r\n\r\n3.4. Servicios y Conectividad de Red\r\n\r\nEstas herramientas aseguran que los servicios esenciales del sistema y las conexiones de red funcionen correctamente.\r\n\r\n* Gesti\u00F3n de Servicios de Windows Ofrece un control preciso para iniciar, detener o reiniciar cualquier servicio del sistema. Despu\u00E9s de cada acci\u00F3n, verifica que el servicio haya alcanzado el estado esperado (por ejemplo, \u0022Running\u0022 o \u0022Stopped\u0022), garantizando que la operaci\u00F3n se complet\u00F3 con \u00E9xito.\r\n* Mapeo de Unidades de Red Automatiza la conexi\u00F3n de unidades de red, permitiendo el uso de credenciales seguras (PSCredential) que pueden almacenarse en el Gestor de Credenciales de Windows para reconexiones autom\u00E1ticas. Garantiza la persistencia de las conexiones entre sesiones.\r\n\r\nAdem\u00E1s de gestionar los servicios, es fundamental poder diagnosticar su rendimiento en tiempo real.\r\n\r\n3.5. Monitoreo y Diagn\u00F3stico\r\n\r\nEsta capacidad proporciona visibilidad sobre el estado del sistema para anticipar y resolver problemas de rendimiento.\r\n\r\n* Monitor de Rendimiento Captura m\u00E9tricas clave (CPU, RAM, disco, red) en tiempo real y genera alertas solo si los umbrales se superan durante un n\u00FAmero configurable de muestras consecutivas. Esta l\u00F3gica ayuda a filtrar picos moment\u00E1neos y a notificar \u00FAnicamente sobre problemas de rendimiento sostenidos.\r\n\r\nEste conjunto de herramientas demuestra el potencial actual del proyecto, que est\u00E1 en continua expansi\u00F3n.\r\n\r\n4. Un Proyecto Vivo y de C\u00F3digo Abierto\r\n\r\nEl \u0022Gestor de Scripts Universal\u0022 es un proyecto de c\u00F3digo libre, construido sobre una filosof\u00EDa de transparencia y colaboraci\u00F3n. Actualmente, cuenta con 17 herramientas funcionales y validadas, y el objetivo es expandir su cat\u00E1logo con 83 herramientas adicionales que ya est\u00E1n en desarrollo, para un total de 100. Al ser de c\u00F3digo abierto, cualquier persona puede revisar el c\u00F3digo fuente, adaptarlo a sus necesidades espec\u00EDficas y contribuir a su mejora, asegurando que la herramienta evolucione junto a las necesidades de la comunidad.\r\n\r\n5. Conclusi\u00F3n: Simplifica tu Administraci\u00F3n\r\n\r\nEl \u0022Gestor de Scripts Universal\u0022 es un aliado estrat\u00E9gico para cualquier administrador de sistemas, especialmente para aquellos que dan sus primeros pasos en la automatizaci\u00F3n. Sus beneficios clave se pueden resumir en tres puntos fundamentales:\r\n\r\n* Centralizaci\u00F3n: Re\u00FAne docenas de herramientas dispersas en una \u00FAnica interfaz cohesiva, eliminando la necesidad de buscar y recordar comandos complejos.\r\n* Reducci\u00F3n de errores: Al automatizar tareas con l\u00F3gica robusta, validaciones y auditor\u00EDas, se minimiza el riesgo de errores humanos, garantizando operaciones seguras y consistentes.\r\n* Ahorro de tiempo: Libera a los administradores de tareas repetitivas y manuales, permiti\u00E9ndoles enfocarse en proyectos de mayor valor estrat\u00E9gico.\r\n\r\nEn definitiva, esta herramienta no solo simplifica el trabajo diario, sino que tambi\u00E9n potencia la eficacia y la confianza del administrador para gestionar entornos de TI de manera profesional y segura.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n1. **Instalaci\u00F3n silenciosa de apps:** Orquestar MSI/EXE con par\u00E1metros, logs y validaci\u00F3n post-instalaci\u00F3n.\r\n\r\n## \uD83D\uDD0E \u00BFQu\u00E9 hace el script?\r\n\r\n1. **Recibe par\u00E1metros**  \r\n   - \u0060InstallerPath\u0060: ruta al instalador (MSI o EXE).  \r\n   - \u0060AppName\u0060: nombre de la aplicaci\u00F3n para validar instalaci\u00F3n.  \r\n   - \u0060LogPath\u0060: carpeta donde guardar logs (por defecto \u0060C:\\Logs\u0060).  \r\n\r\n2. **Crea carpeta de logs** si no existe.  \r\n   Ejemplo: \u0060C:\\Logs\\MiApp_20251017_1059.log\u0060.\r\n\r\n3. **Detecta el tipo de instalador**  \r\n   - Si es \u0060.msi\u0060 \u2192 usa \u0060msiexec.exe\u0060 con \u0060/qn\u0060 (silencioso) y \u0060/L*v\u0060 (log detallado).  \r\n   - Si es \u0060.exe\u0060 \u2192 aplica par\u00E1metros gen\u00E9ricos \u0060/quiet /norestart /log\u0060. *(puedes personalizar seg\u00FAn el instalador: InnoSetup, NSIS, InstallShield, etc.)*  \r\n\r\n4. **Ejecuta la instalaci\u00F3n** en modo silencioso y espera a que termine.  \r\n\r\n5. **Valida la instalaci\u00F3n**  \r\n   - Busca en el registro de Windows si existe un programa cuyo \u0060DisplayName\u0060 contenga el nombre que pasaste en \u0060$AppName\u0060.  \r\n   - Si lo encuentra \u2192 \u2705 Instalaci\u00F3n correcta.  \r\n   - Si no \u2192 \u26A0 Instalaci\u00F3n ejecutada pero no detectada.  \r\n\r\n6. **Manejo de errores**  \r\n   - Si el instalador devuelve un c\u00F3digo distinto de 0 \u2192 \u274C error, revisa el log.  \r\n\r\n---\r\n\r\n## \u2699\uFE0F C\u00F3mo usarlo en tu Gestor de Scripts Universal\r\n\r\nT\u00FA ya tienes un **UI modular con iconos y ejecuci\u00F3n paralela**. Este script encaja como **m\u00F3dulo de instalaci\u00F3n silenciosa**. Te doy un flujo de integraci\u00F3n:\r\n\r\n1. **En tu UI** (WinForms/WPF):\r\n   - Agrega un bot\u00F3n o men\u00FA: *\u201CInstalar aplicaci\u00F3n\u201D*.  \r\n   - Permite al usuario seleccionar el instalador (\u0060OpenFileDialog\u0060).  \r\n   - Campo de texto para el nombre de la app (\u0060AppName\u0060).  \r\n   - Opci\u00F3n para elegir carpeta de logs.  \r\n\r\n2. **Llamada al script**  \r\n   Desde tu gestor, ejecuta algo as\u00ED:\r\n\r\n   \u0060\u0060\u0060powershell\r\n   powershell.exe -ExecutionPolicy Bypass -File \u0022.\\InstaladorSilencioso.ps1\u0022 \u0060\r\n       -InstallerPath \u0022C:\\Installers\\MiApp.msi\u0022 \u0060\r\n       -AppName \u0022MiApp\u0022 \u0060\r\n       -LogPath \u0022C:\\Logs\u0022\r\n   \u0060\u0060\u0060\r\n\r\n   *(Si tu gestor ya maneja jobs en paralelo, puedes lanzar varias instalaciones a la vez con par\u00E1metros distintos.)*\r\n\r\n3. **Captura de salida**  \r\n   - Muestra en tu UI el estado: *\u201CInstalando\u2026\u201D*, *\u201CValidando\u2026\u201D*, *\u201CCompletado\u201D*.  \r\n   - Incluso puedes leer el log en tiempo real y mostrarlo en un textbox.  \r\n\r\n4. **Extensi\u00F3n futura**  \r\n   - A\u00F1adir soporte para **listas de instaladores** (ejecutar varios en secuencia o paralelo).  \r\n   - Integrar **iconos din\u00E1micos**: verde si instalado, rojo si fall\u00F3.  \r\n   - Guardar un **historial de instalaciones** en tu gestor.  \r\n\r\n\r\n2. **Actualizaci\u00F3n de software:** Verificar versiones, descargar releases y aplicar actualizaciones con rollback.\r\n\r\n## \uD83D\uDD0E \u00BFQu\u00E9 hace el script?\r\n\r\n1. **Verifica la versi\u00F3n instalada**  \r\n   - Toma la ruta del ejecutable actual (\u0060CurrentExePath\u0060) y lee su \u0060ProductVersion\u0060.  \r\n   - Esto sirve para comparar antes y despu\u00E9s de la actualizaci\u00F3n.\r\n\r\n2. **Descarga la nueva versi\u00F3n**  \r\n   - Usa la URL que le pasas (\u0060DownloadUrl\u0060) y guarda el instalador en una carpeta temporal (\u0060C:\\Temp\u0060 por defecto).  \r\n\r\n3. **Genera un backup (rollback)**  \r\n   - Copia la carpeta donde est\u00E1 el ejecutable actual a \u0060C:\\Backup\u0060.  \r\n   - Si la actualizaci\u00F3n falla, restaura desde ah\u00ED.\r\n\r\n4. **Ejecuta la instalaci\u00F3n silenciosa**  \r\n   - Si es \u0060.msi\u0060 \u2192 usa \u0060msiexec.exe /qn /norestart /L*v\u0060.  \r\n   - Si es \u0060.exe\u0060 \u2192 usa \u0060/quiet /norestart /log\u0060.  \r\n   - Todo queda registrado en un log con timestamp en \u0060C:\\Logs\u0060.\r\n\r\n5. **Valida la actualizaci\u00F3n**  \r\n   - Vuelve a leer la versi\u00F3n del ejecutable.  \r\n   - Si cambi\u00F3 \u2192 \u2705 actualizaci\u00F3n exitosa.  \r\n   - Si no cambi\u00F3 o hubo error \u2192 \u26A0 inicia rollback.\r\n\r\n6. **Rollback autom\u00E1tico**  \r\n   - Si el instalador devuelve error, elimina la carpeta nueva y restaura la copia de seguridad.  \r\n   - As\u00ED nunca te quedas con la app rota.\r\n\r\n---\r\n\r\n## \u2699\uFE0F C\u00F3mo funciona paso a paso\r\n\r\n- **Entrada**: par\u00E1metros (\u0060AppName\u0060, \u0060CurrentExePath\u0060, \u0060DownloadUrl\u0060, \u0060InstallerType\u0060).  \r\n- **Proceso**: descarga \u2192 backup \u2192 instalaci\u00F3n \u2192 validaci\u00F3n.  \r\n- **Salida**:  \r\n  - Log detallado en \u0060C:\\Logs\u0060.  \r\n  - Mensajes en consola indicando \u00E9xito, advertencia o error.  \r\n  - Si falla, rollback autom\u00E1tico.\r\n\r\n---\r\n\r\n## \uD83D\uDDA5\uFE0F C\u00F3mo usarlo en tu Gestor de Scripts Universal\r\n\r\nT\u00FA ya tienes un **UI modular con iconos, ejecuci\u00F3n paralela y logs**. Este script encaja como **m\u00F3dulo de actualizaci\u00F3n**. As\u00ED lo integras:\r\n\r\n1. **En tu UI**  \r\n   - Agrega un formulario con campos:  \r\n     - Nombre de la app (\u0060AppName\u0060)  \r\n     - Ruta del ejecutable actual (\u0060CurrentExePath\u0060)  \r\n     - URL de descarga (\u0060DownloadUrl\u0060)  \r\n     - Tipo de instalador (\u0060msi\u0060 o \u0060exe\u0060)  \r\n   - Bot\u00F3n: *\u201CActualizar\u201D*.\r\n\r\n2. **Ejecuci\u00F3n desde tu gestor**  \r\n   - Cuando el usuario pulse *Actualizar*, tu gestor lanza:  \r\n\r\n     \u0060\u0060\u0060powershell\r\n     powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Update-Software.ps1\u0022 \u0060\r\n         -AppName \u0022MiApp\u0022 \u0060\r\n         -CurrentExePath \u0022C:\\Program Files\\MiApp\\MiApp.exe\u0022 \u0060\r\n         -DownloadUrl \u0022https://servidor.com/releases/MiApp_v2.0.msi\u0022 \u0060\r\n         -InstallerType \u0022msi\u0022\r\n     \u0060\u0060\u0060\r\n\r\n3. **Captura de salida**  \r\n   - Tu gestor puede leer la salida est\u00E1ndar y mostrar:  \r\n     - Barra de progreso (*Descargando\u2026 Instalando\u2026 Validando\u2026*)  \r\n     - Icono verde si \u00E9xito, rojo si rollback.  \r\n     - Bot\u00F3n para abrir el log generado.\r\n\r\n4. **Extensi\u00F3n futura**  \r\n   - Leer un **JSON/CSV con varias apps** y actualizarlas en paralelo.  \r\n   - Mostrar un **dashboard** con estado de cada app.  \r\n   - Integrar **notificaciones toast** al terminar cada actualizaci\u00F3n.  \r\n\r\n---\r\n\r\n\uD83D\uDC49 En resumen: este \u0060.ps1\u0060 convierte tu Gestor en un **actualizador universal con rollback seguro**.  \r\nNunca m\u00E1s te quedar\u00EDas con una app da\u00F1ada tras un update fallido, porque siempre hay copia de seguridad lista para restaurar.\r\n\r\n3. **Gesti\u00F3n de servicios:** Iniciar/detener/reiniciar servicios con verificaci\u00F3n de estado y alertas.\r\n \r\n\r\n## \uD83D\uDD0E Explicaci\u00F3n de c\u00F3mo funciona el \u0060Manage-Service.ps1\u0060\r\n\r\n1. **Par\u00E1metros de entrada**  \r\n   - \u0060ServiceName\u0060: el nombre del servicio (ejemplo: \u0060\u0022Spooler\u0022\u0060 para la cola de impresi\u00F3n).  \r\n   - \u0060Action\u0060: la acci\u00F3n a realizar (\u0060Start\u0060, \u0060Stop\u0060 o \u0060Restart\u0060).  \r\n   - \u0060LogPath\u0060: carpeta donde se guardar\u00E1n los logs (por defecto \u0060C:\\Logs\u0060).  \r\n\r\n2. **Preparaci\u00F3n**  \r\n   - Si la carpeta de logs no existe, la crea.  \r\n   - Genera un archivo de log con timestamp \u00FAnico.  \r\n\r\n3. **Funci\u00F3n \u0060Write-Log\u0060**  \r\n   - Escribe mensajes en el log y en la consola.  \r\n   - Usa colores para diferenciar niveles:  \r\n     - Verde \u2192 informaci\u00F3n/\u00E9xito  \r\n     - Amarillo \u2192 advertencia  \r\n     - Rojo \u2192 error  \r\n\r\n4. **Detecci\u00F3n del servicio**  \r\n   - Usa \u0060Get-Service\u0060 para verificar que el servicio existe.  \r\n   - Muestra el estado actual (Running, Stopped, etc.).  \r\n\r\n5. **Ejecuci\u00F3n de la acci\u00F3n**  \r\n   - Si pediste \u0060Start\u0060 \u2192 arranca el servicio si no estaba corriendo.  \r\n   - Si pediste \u0060Stop\u0060 \u2192 lo detiene si estaba activo.  \r\n   - Si pediste \u0060Restart\u0060 \u2192 lo reinicia forzadamente.  \r\n   - Despu\u00E9s de la acci\u00F3n espera unos segundos (\u0060Start-Sleep\u0060) para que el estado se actualice.  \r\n\r\n6. **Verificaci\u00F3n del estado final**  \r\n   - Vuelve a consultar el estado del servicio.  \r\n   - Si coincide con lo esperado (ejemplo: pediste \u0060Start\u0060 y qued\u00F3 en \u0060Running\u0060) \u2192 \u2705 \u00E9xito.  \r\n   - Si no coincide \u2192 \u274C error, lo registra en el log y lo muestra en rojo.  \r\n\r\n7. **Manejo de errores**  \r\n   - Si el servicio no existe o ocurre un fallo, captura la excepci\u00F3n y la escribe en el log.  \r\n\r\n---\r\n\r\n## \uD83D\uDDA5\uFE0F C\u00F3mo usarlo en tu Gestor de Scripts Universal\r\n\r\n- **UI**:  \r\n  - Campo de texto para el nombre del servicio.  \r\n  - Dropdown con las acciones (\u0060Iniciar\u0060, \u0060Detener\u0060, \u0060Reiniciar\u0060).  \r\n  - Bot\u00F3n *Ejecutar*.  \r\n\r\n- **Ejecuci\u00F3n**:  \r\n  Tu gestor puede lanzar algo como:  \r\n\r\n  \u0060\u0060\u0060powershell\r\n  powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Manage-Service.ps1\u0022 \u0060\r\n      -ServiceName \u0022Spooler\u0022 \u0060\r\n      -Action \u0022Restart\u0022 \u0060\r\n      -LogPath \u0022C:\\Logs\u0022\r\n  \u0060\u0060\u0060\r\n\r\n- **Integraci\u00F3n visual**:  \r\n  - Mostrar en tu UI el estado final del servicio.  \r\n  - Usar \u00EDconos din\u00E1micos: \uD83D\uDFE2 si est\u00E1 corriendo, \uD83D\uDD34 si est\u00E1 detenido, \u26A0 si hubo error.  \r\n  - Bot\u00F3n para abrir el log generado.  \r\n\r\n---\r\n\r\n\u2705 En resumen: este \u0060.ps1\u0060 es **funcional y estable**. Te da control sobre cualquier servicio de Windows con logs y verificaci\u00F3n de estado.  \r\nLo puedes usar tal cual o integrarlo como **m\u00F3dulo de administraci\u00F3n de servicios** dentro de tu Gestor.  \r\n\r\n\r\n4. **Creaci\u00F3n de usuarios locales:** Alta, contrase\u00F1as seguras y pertenencia a grupos predefinidos.\r\n\r\n## Qu\u00E9 hace y por qu\u00E9 est\u00E1 bien pensado\r\n\r\n- **Evita duplicados:** si el usuario existe, no lo recrea y lo reporta.\r\n- **Contrase\u00F1a robusta por defecto:** genera al menos 12\u201316 caracteres mezclando min\u00FAsculas, may\u00FAsculas, d\u00EDgitos y s\u00EDmbolos.\r\n- **Grupos predefinidos:** a\u00F1ade el usuario a los grupos que indiques y valida pertenencia.\r\n- **Pol\u00EDticas \u00FAtiles:** cambio obligatorio de contrase\u00F1a, deshabilitar para staging, registro de expiraci\u00F3n.\r\n- **Logs claros:** cada paso queda en un archivo con timestamp y niveles (INFO/WARN/ERROR).\r\n- **Compatibilidad:** usa cmdlets modernos y, si fallan, intenta fallback con \u201Cnet user\u201D para entornos antiguos.\r\n\r\n---\r\n\r\n## C\u00F3mo usarlo con tu Gestor de Scripts Universal\r\n\r\n- **UI:**\r\n  - Campos: Usuario, Nombre completo, Descripci\u00F3n, Lista de grupos (multi-select).\r\n  - Opciones: Forzar cambio de contrase\u00F1a, Deshabilitar usuario, Longitud de contrase\u00F1a.\r\n  - Toggle: \u201CProporcionar contrase\u00F1a\u201D o \u201CGenerar autom\u00E1ticamente\u201D.\r\n\r\n- **Ejecuci\u00F3n desde tu gestor:**\r\n  - Generaci\u00F3n autom\u00E1tica:\r\n    \u0060\u0060\u0060powershell\r\n    powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Create-LocalUser.ps1\u0022 \u0060\r\n        -UserName \u0022deployuser\u0022 \u0060\r\n        -FullName \u0022Usuario de despliegue\u0022 \u0060\r\n        -Description \u0022Cuenta t\u00E9cnica para despliegues\u0022 \u0060\r\n        -Groups @(\u0022Administrators\u0022,\u0022Remote Desktop Users\u0022) \u0060\r\n        -PasswordLength 18 \u0060\r\n        -ForceChangeAtNextLogon \u0060\r\n        -LogPath \u0022C:\\Logs\u0022\r\n    \u0060\u0060\u0060\r\n  - Proporcionando contrase\u00F1a (ej. tomada de tu vault o ingreso manual):\r\n    \u0060\u0060\u0060powershell\r\n    $secure = Read-Host \u0022Contrase\u00F1a\u0022 -AsSecureString\r\n    powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Create-LocalUser.ps1\u0022 \u0060\r\n        -UserName \u0022svc_app\u0022 \u0060\r\n        -FullName \u0022Servicio de Aplicaci\u00F3n\u0022 \u0060\r\n        -Groups @(\u0022Users\u0022) \u0060\r\n        -SecurePassword $secure \u0060\r\n        -DisableUser \u0060\r\n        -LogPath \u0022C:\\Logs\u0022\r\n    \u0060\u0060\u0060\r\n\r\n- **Integraci\u00F3n visual:**\r\n  - Muestra el log en tiempo real (textbox).\r\n  - Iconos: verde si creado y en grupos, amarillo si alg\u00FAn grupo falt\u00F3, rojo si error.\r\n  - Historial: guarda en tu auditor\u00EDa interna los detalles del usuario creado y pertenencia final.\r\n\r\n---\r\n\r\n## Mejores pr\u00E1cticas que puedes a\u00F1adir\r\n\r\n- **Almacenamiento seguro:** si guardas contrase\u00F1as, usa DPAPI/Credential Manager y evita imprimirlas.\r\n- **Plantillas de roles:** define presets de grupos (ej. \u201COperador\u201D, \u201CServicio\u201D, \u201CRDP\u201D) para selecci\u00F3n r\u00E1pida.\r\n- **Paralelismo controlado:** creaci\u00F3n de m\u00FAltiples usuarios en cola con l\u00EDmites de concurrencia.\r\n- **Validaciones de nombre:** normaliza caracteres, evita espacios o acentos si tu pol\u00EDtica lo requiere.\r\n\r\n\r\n5. **Pol\u00EDticas de firewall:** Habilitar reglas por perfil y puertos con auditor\u00EDa de cambios.\r\n\r\n### Pol\u00EDticas de firewall con auditor\u00EDa de cambios\r\n\r\nEsto est\u00E1 pensado para ser seguro, reversible y claro. El m\u00F3dulo habilita reglas por perfiles (Domain/Private/Public), abre/cierra puertos TCP/UDP, aplica etiquetas coherentes, y deja una auditor\u00EDa con diff de estado antes y despu\u00E9s.\r\n\r\n---\r\n\r\n## Script base: Set-FirewallPolicy.ps1\r\n---\r\n\r\n### Qu\u00E9 hace y por qu\u00E9 es s\u00F3lido\r\n\r\n- **Acci\u00F3n expl\u00EDcita:** abre o cierra puertos con \u0060Mode\u0060 controlado.\r\n- **Perfiles controlados:** aplica en Domain/Private/Public seg\u00FAn definas, evitando cambios globales descontrolados.\r\n- **Idempotencia:** usa nombres de regla calculados (\u0060RulePrefix-AppName-Protocol-Port\u0060) para actualizar o recrear si la configuraci\u00F3n no coincide.\r\n- **Auditor\u00EDa completa:** snapshot antes/despu\u00E9s en JSON y diff textual; \u201Cactions.log\u201D registra todo con niveles INFO/WARN/ERROR.\r\n- **Seguridad operativa:** direcciona tr\u00E1fico inbound solamente, y deja descripci\u00F3n con marca de auditor\u00EDa para rastreabilidad.\r\n\r\n---\r\n\r\n### C\u00F3mo usarlo con tu Gestor de Scripts Universal\r\n\r\n- **UI:**\r\n  - **Acci\u00F3n:** Open/Close.\r\n  - **Puertos:** entrada m\u00FAltiple (ej. 80, 443, 3389).\r\n  - **Protocolo:** TCP/UDP.\r\n  - **Perfiles:** checkboxes Domain/Private/Public.\r\n  - **Nombre l\u00F3gico:** AppName (para etiquetar).\r\n  - **Prefijo de regla:** RulePrefix (por ejemplo, \u201CGSU\u201D).\r\n  - **Carpeta de logs:** opcional.\r\n\r\n- **Ejecuci\u00F3n desde tu gestor:**\r\n  \u0060\u0060\u0060powershell\r\n  powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Set-FirewallPolicy.ps1\u0022 \u0060\r\n      -Mode Open \u0060\r\n      -Ports 80,443 \u0060\r\n      -Protocol TCP \u0060\r\n      -Profiles @(\u0022Private\u0022,\u0022Public\u0022) \u0060\r\n      -RulePrefix \u0022GSU\u0022 \u0060\r\n      -AppName \u0022WebService\u0022 \u0060\r\n      -LogPath \u0022C:\\Logs\u0022\r\n  \u0060\u0060\u0060\r\n\r\n- **Integraci\u00F3n visual:**\r\n  - **Estado:** muestra \u201Cactions.log\u201D en tiempo real y un sumario del diff.\r\n  - **Iconos:** verde si reglas creadas/actualizadas; amarillo si hubo recreaci\u00F3n; rojo si errores.\r\n  - **Auditor\u00EDa:** bot\u00F3n para abrir carpeta de auditor\u00EDa del timestamp.\r\n\r\n---\r\n\r\n### Extensiones recomendadas\r\n\r\n- **Outbound opcional:** agregar flag para gestionar tr\u00E1fico saliente si tu pol\u00EDtica lo requiere.\r\n- **Scopes por programa o servicio:** permitir reglas por \u0060Program\u0060 o \u0060Service\u0060 con filtros Application/Service para mayor precisi\u00F3n.\r\n- **Plantillas de puertos por rol:** presets tipo \u201CWeb\u201D, \u201CDB\u201D, \u201CRDP\u201D, \u201CSSH\u201D con listas predefinidas.\r\n- **Revert:** comando que lee el \u0060AuditFolder\u0060 y revierte \u00FAnicamente las reglas \u0060RulePrefix-*\u0060 creadas en esa sesi\u00F3n.\r\n\r\n\r\n6. **Inventario de hardware:** Exportar CPU, RAM, discos, GPU y firmware a CSV/JSON.\r\n  ### Inventario de hardware con exportaci\u00F3n a CSV y JSON\r\n---\r\n\r\n## Script base: Inventory-Hardware.ps1\r\n\r\n---\r\n\r\n### Qu\u00E9 captura y por qu\u00E9 es confiable\r\n\r\n- **CPU:** nombre, fabricante, n\u00FAcleos, hilos, velocidad, caches, ID.  \r\n- **RAM:** por m\u00F3dulo, capacidad y velocidad normalizadas a GB/MHz.  \r\n- **Discos:** modelo, interfaz, tipo de medio, serial, tama\u00F1o en GB, firmware.  \r\n- **GPU:** nombre, versi\u00F3n de driver, vendor, VRAM en GB, procesador de video.  \r\n- **Firmware/placa:** BIOS fabricante/versi\u00F3n/fecha, board fabricante/producto/serial.  \r\n- **Sistema:** fabricante/modelo, RAM total, versi\u00F3n del sistema operativo.\r\n\r\n---\r\n\r\n### C\u00F3mo usarlo en tu Gestor de Scripts Universal\r\n\r\n- **UI:**\r\n  - **Etiqueta:** Tag para auditor\u00EDa (ej. \u201CGSU\u201D o nombre del cliente).  \r\n  - **Carpeta de salida:** selector para \u0060$OutputPath\u0060.  \r\n  - **Opci\u00F3n:** toggle para \u0060$IncludePerDeviceCSV\u0060 si quieres CSVs por dispositivo.  \r\n\r\n- **Ejecuci\u00F3n desde tu gestor:**\r\n  \u0060\u0060\u0060powershell\r\n  powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Inventory-Hardware.ps1\u0022 \u0060\r\n      -OutputPath \u0022D:\\Inventarios\\PC-001\u0022 \u0060\r\n      -Tag \u0022GSU-PC-001\u0022 \u0060\r\n      -LogPath \u0022D:\\Inventarios\\Logs\u0022\r\n  \u0060\u0060\u0060\r\n\r\n- **Integraci\u00F3n visual:**\r\n  - **Resumen r\u00E1pido:** cargar \u0060summary.csv\u0060 en tu UI para un dashboard de muchas m\u00E1quinas.  \r\n  - **Detalle t\u00E9cnico:** abrir \u0060summary.json\u0060 y las categor\u00EDas para inspecci\u00F3n profunda.  \r\n  - **Iconos:** verde si completado; amarillo si faltan clases; rojo si error exportando.  \r\n\r\n---\r\n\r\n### Extensiones recomendadas\r\n\r\n- **Inventario remoto:** iterar sobre una lista de equipos con CIM remoting y consolidar snapshots.  \r\n- **Firma del snapshot:** calcular hash de cada archivo para integridad.  \r\n- **Comparativos:** generar diffs entre snapshots por host para detectar cambios de hardware.  \r\n- **Etiquetas de proyecto:** agregar campos de ubicaci\u00F3n, responsable y prop\u00F3sito para auditor\u00EDa.  \r\n\r\n7. **Inventario de software:** Listar apps instaladas por origen (MSI, Store, portable) con versiones.\r\n### Inventario de software por origen con versiones\r\n### Qu\u00E9 detecta y c\u00F3mo clasifica\r\n\r\n- **MSI:**\r\n  - **Origen:** entradas de registro en HKLM/HKCU (incluye x86 en WOW6432Node).\r\n  - **Datos:** nombre, versi\u00F3n, publisher, fecha, ubicaci\u00F3n e uninstall string.\r\n- **Store (AppX):**\r\n  - **Origen:** paquetes de Microsoft Store v\u00EDa \u0060Get-AppxPackage\u0060.\r\n  - **Datos:** nombre, versi\u00F3n, publisher, arquitectura, carpeta de instalaci\u00F3n, usuario.\r\n- **Portable:**\r\n  - **Origen:** EXE encontrados en carpetas configurables, no registrados como MSI.\r\n  - **Datos:** nombre de producto, versi\u00F3n, publisher, ruta y tama\u00F1o. Usa metadatos del ejecutable.\r\n\r\n---\r\n\r\n### C\u00F3mo integrarlo en tu Gestor de Scripts Universal\r\n\r\n- **UI:**\r\n  - **Carpeta de salida:** selector para \u0060$OutputPath\u0060.\r\n  - **Opciones:**\r\n    - **Escanear portable:** toggle para \u0060-ScanPortable\u0060.\r\n    - **Ra\u00EDces a escanear:** editor de lista para \u0060$PortableRoots\u0060.\r\n    - **AppX todos los usuarios:** toggle para \u0060-IncludeAllUsersAppX\u0060.\r\n- **Ejecuci\u00F3n:**\r\n  \u0060\u0060\u0060powershell\r\n  powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Inventory-Software.ps1\u0022 \u0060\r\n      -OutputPath \u0022D:\\Inventarios\\PC-001\u0022 \u0060\r\n      -LogPath \u0022D:\\Inventarios\\Logs\u0022 \u0060\r\n      -ScanPortable \u0060\r\n      -PortableRoots @(\u0022D:\\Apps\u0022,\u0022C:\\Tools\u0022) \u0060\r\n      -IncludeAllUsersAppX\r\n  \u0060\u0060\u0060\r\n- **Visualizaci\u00F3n:**\r\n  - **Tablas:** carga msi.csv, store.csv y portable.csv en tabs separados.\r\n  - **Resumen:** usa summary.csv para mostrar conteos y top publishers.\r\n  - **Iconos:** verde si exportaci\u00F3n completa; amarillo si portable desactivado; rojo si errores.\r\n\r\n---\r\n\r\n### Extensiones recomendadas\r\n\r\n- **Detecci\u00F3n de or\u00EDgenes adicionales:** Winget/Chocolatey leyendo sus bases locales para clasificar \u201Cpaquetes\u201D.\r\n- **Firmas de integridad:** hashes de EXE portables para control de cambios.\r\n- **Comparativos entre snapshots:** detectar nuevas instalaciones o desinstalaciones.\r\n- **Filtro de sistema:** excluir componentes de Microsoft para ver solo software de terceros.\r\n- **Exportaci\u00F3n unificada:** generar un \u00FAnico CSV con columna \u201COrigin\u201D para anal\u00EDtica cruzada.\r\n\r\n8. **Hardening de Windows:** Deshabilitar servicios inseguros, SMBv1, macros y autorun.\r\n### Hardening de Windows: deshabilitar servicios inseguros, SMBv1, macros y autorun\r\n\r\n### Qu\u00E9 endurece y por qu\u00E9 es seguro\r\n\r\n- **Servicios inseguros:** reduce superficie de ataque (SNMP, Telnet, RemoteRegistry, SSDP/UPnP, NetBIOS/Browser) solo si existen, con parada segura y cambio a inicio deshabilitado.  \r\n- **SMBv1:** elimina el protocolo obsoleto y vulnerable; adem\u00E1s refuerza el stack para evitar invitados inseguros.  \r\n- **Autorun/AutoPlay:** bloquea ejecuci\u00F3n autom\u00E1tica desde medios externos, mitigando malware de USB/medios.  \r\n- **Macros de Office:** deshabilita macros por pol\u00EDtica y bloquea contenido marcado desde internet, manteniendo Vista Protegida.\r\n\r\n---\r\n\r\n### C\u00F3mo usarlo con tu Gestor de Scripts Universal\r\n\r\n- **UI:**\r\n  - Toggle: Dry Run (simular).\r\n  - Toggle: Rollback habilitado.\r\n  - Panel de resultados: muestra hardening.log y diff-services.csv.\r\n- **Ejecuci\u00F3n:**\r\n  \u0060\u0060\u0060powershell\r\n  powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Hardening-Windows.ps1\u0022 \u0060\r\n      -LogPath \u0022D:\\Seguridad\\Logs\u0022 \u0060\r\n      -AuditPath \u0022D:\\Seguridad\\Auditoria\u0022 \u0060\r\n      -DryRun:$false \u0060\r\n      -EnableRollback\r\n  \u0060\u0060\u0060\r\n- **Visualizaci\u00F3n:**\r\n  - Icono verde si todas las operaciones terminan sin ERROR.\r\n  - Amarillo si hay WARN (servicios ausentes, claves no presentes).\r\n  - Bot\u00F3n para abrir la carpeta de auditor\u00EDa de la sesi\u00F3n.\r\n\r\n---\r\n\r\n### Extensiones recomendadas\r\n\r\n- **Plantillas por rol:** \u201CWorkstation\u201D, \u201CServer\u201D, \u201CKiosk\u201D con listas de servicios y pol\u00EDticas diferenciadas.  \r\n- **GPO local autom\u00E1tica:** aplicar las mismas pol\u00EDticas v\u00EDa LGPO para mayor traza.  \r\n- **Reinicio controlado:** programar reinicio si desactivar SMBv1 lo requiere en ciertos builds.  \r\n- **Rollback real:** script complementario que lea el snapshot \u201Cbefore\u201D y restaure \u0060StartType\u0060 de servicios y valores de registro cambiados.  \r\n\r\n9. **Mapeo de unidades:** Conectar y persistir rutas de red con credenciales seguras.\r\n### Mapeo de unidades de red con credenciales seguras y persistencia\r\n\r\n### Qu\u00E9 hace y por qu\u00E9 es s\u00F3lido\r\n\r\n- **M\u00FAltiples mapeos en una pasada:** estructura por objetos para definir letra, ruta, etiqueta y persistencia por unidad.\r\n- **Credenciales seguras:** acepta PSCredential en memoria; opcionalmente guarda en Credential Manager para reconexi\u00F3n sin prompts.\r\n- **Conectividad y verificaci\u00F3n:** prueba host, acceso al share, mapea y valida que la unidad sea accesible.\r\n- **Persistencia real:** usa net use con /persistent:yes para reconectar al iniciar sesi\u00F3n.\r\n- **Auditor\u00EDa:** log por sesi\u00F3n y resumen en CSV/JSON para tu dashboard.\r\n\r\n---\r\n\r\n### C\u00F3mo usarlo en tu Gestor de Scripts Universal\r\n\r\n- **UI:**\r\n  - Tabla editable con columnas: DriveLetter, Path, Label, Persist, UseCurrentUser, CredentialTarget.\r\n  - Bot\u00F3n \u201CAgregar credencial\u201D que capture PSCredential (usuario/contrase\u00F1a) y opcionalmente la guarde con un nombre en Credential Manager.\r\n  - Toggle \u201CForceRemap\u201D para recrear mapeos existentes.\r\n\r\n- **Ejecuci\u00F3n:**\r\n  \u0060\u0060\u0060powershell\r\n  $cred = [pscredential]::new(\u0022DOMINIO\\usuario\u0022,(Read-Host \u0022Contrase\u00F1a\u0022 -AsSecureString))\r\n  $Mappings = @(\r\n    @{ DriveLetter=\u0027Z\u0027; Path=\u0027\\\\fileserver01\\proyectos\u0027; Label=\u0027Proyectos\u0027; Persist=$true; Credential=$cred; CredentialTarget=\u0027fileserver01\\proyectos\u0027 },\r\n    @{ DriveLetter=\u0027Y\u0027; Path=\u0027\\\\fileserver01\\recursos\u0027; Label=\u0027Recursos\u0027; Persist=$true; UseCurrentUser=$true }\r\n  )\r\n\r\n  powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Map-NetworkDrives.ps1\u0022 \u0060\r\n      -Mappings $Mappings \u0060\r\n      -ForceRemap \u0060\r\n      -LogPath \u0022D:\\GSU\\Logs\u0022\r\n  \u0060\u0060\u0060\r\n\r\n- **Visualizaci\u00F3n:**\r\n  - Muestra el log y el resumen (status por unidad).\r\n  - \u00CDconos: verde si OK, amarillo si WARN (host inaccesible/vpn), rojo si ERROR.\r\n\r\n---\r\n\r\n### Extensiones recomendadas\r\n\r\n- **Desconexi\u00F3n controlada:** m\u00F3dulo complementario \u201CUnmap-NetworkDrives.ps1\u201D con lista de unidades a desmontar y auditor\u00EDa.\r\n- **Plantillas por rol:** \u201CDise\u00F1o\u201D, \u201CContabilidad\u201D, \u201COperaciones\u201D con conjuntos de shares predefinidos.\r\n- **Validaci\u00F3n de permisos:** prueba de lectura/escritura creando un archivo temporal en el share para verificar permisos efectivos.\r\n- **Reconexi\u00F3n autom\u00E1tica:** tarea programada que remapea si el share cae o cambia la red (ideal para laptops).\r\n\r\n10. **Limpieza de cach\u00E9s:** Vaciar temp, prefetch y logs antiguos con exclusiones inteligentes.\r\n### Limpieza de cach\u00E9s con exclusiones inteligentes, auditor\u00EDa y modo seguro\r\n\r\n### Qu\u00E9 hace y por qu\u00E9 es s\u00F3lido\r\n\r\n- **Rutas clave:** limpia Temp del usuario y, opcionalmente, Temp del sistema y Prefetch sin tocar archivos recientes cr\u00EDticos.  \r\n- **Logs antiguos:** borra logs viejos por d\u00EDas y tama\u00F1o, enfoc\u00E1ndose en lo que realmente libera espacio.  \r\n- **Exclusiones inteligentes:** evita rutas sensibles y patrones de archivos importantes; configurable para tus reglas.  \r\n- **Seguridad operativa:** evita eliminar archivos en uso, reintenta, y ofrece **DryRun** para validar antes.  \r\n- **Auditor\u00EDa completa:** actions.log registra cada acci\u00F3n; summary.csv/json dan cifras para tu dashboard.\r\n\r\n---\r\n\r\n### C\u00F3mo usarlo en tu Gestor de Scripts Universal\r\n\r\n- **UI:**\r\n  - **Toggles:** IncludePrefetch, IncludeSystemTemp, DryRun.\r\n  - **Par\u00E1metros:** LogRetentionDays, MinLogSizeMB.\r\n  - **Listas editables:** ExtraLogRoots, ExcludePaths, ExcludePatterns, AdditionalTempDirs.\r\n  - **Bot\u00F3n:** Ejecutar limpieza.\r\n\r\n- **Ejecuci\u00F3n:**\r\n  \u0060\u0060\u0060powershell\r\n  powershell.exe -ExecutionPolicy Bypass -File \u0022.\\Clean-Caches.ps1\u0022 \u0060\r\n      -LogRetentionDays 21 \u0060\r\n      -MinLogSizeMB 10 \u0060\r\n      -IncludePrefetch \u0060\r\n      -IncludeSystemTemp \u0060\r\n      -ExtraLogRoots @(\u0022D:\\AppLogs\u0022,\u0022C:\\ProgramData\\MyApp\\Logs\u0022) \u0060\r\n      -ExcludePaths @(\u0022C:\\ProgramData\\MyApp\\Config\u0022) \u0060\r\n      -ExcludePatterns @(\u0022*.conf\u0022,\u0022*.cfg\u0022) \u0060\r\n      -LogPath \u0022D:\\GSU\\Logs\u0022\r\n  \u0060\u0060\u0060\r\n\r\n- **Visualizaci\u00F3n:**\r\n  - **Estado en vivo:** muestra actions.log.\r\n  - **Resumen:** carga summary.csv/json y pinta un indicador de espacio liberado.\r\n  - **Iconos:** verde si se liber\u00F3 espacio; amarillo si DryRun; rojo si hubo errores.\r\n\r\n---\r\n\r\n### Extensiones recomendadas\r\n\r\n- **Planificador:** tarea programada semanal con par\u00E1metros predefinidos y notificaci\u00F3n al finalizar.  \r\n- **Prueba de impacto:** comparar tama\u00F1o de Temp antes y despu\u00E9s y graficarlo en tu dashboard.  \r\n- **Pol\u00EDtica por rol:** perfiles \u201CWorkstation\u201D, \u201CDev\u201D, \u201CServer\u201D con exclusiones y ra\u00EDces distintas.  \r\n- **Cuota de limpieza:** l\u00EDmites por sesi\u00F3n (no borrar m\u00E1s de X GB) para entornos delicados.  \r\n\r\n11. **Rotaci\u00F3n de logs:** Comprimir, mover y purgar por antig\u00FCedad y tama\u00F1o.\r\n- **Prop\u00F3sito:** Automatizar la rotaci\u00F3n de logs en Windows: comprimir archivos antiguos, moverlos a un repositorio de archivo, y purgar por antig\u00FCedad y/o tama\u00F1o total. Previene crecimientos descontrolados y mantiene trazabilidad con auditor\u00EDa en CSV/JSON.\r\n- **Alcance:**  \r\n  - **Entradas:** rutas de logs, ruta de archivo, d\u00EDas para comprimir/purgar, tama\u00F1o m\u00E1ximo del archivo, modo DryRun, patrones de exclusi\u00F3n.  \r\n  - **Salidas:** archivos .zip por carpeta/fecha, logs de ejecuci\u00F3n, auditor\u00EDa en CSV/JSON, reporte final en consola.  \r\n  - **Validaciones:** existencia de rutas, permisos de escritura, idempotencia (no recomprimir ni mover duplicados), exclusi\u00F3n segura de archivos en uso y rutas sensibles.\r\n\r\n## Explicaci\u00F3n de uso\r\n\r\n### Par\u00E1metros\r\n\r\n- **LogRoots:** Rutas de carpetas donde est\u00E1n los logs a gestionar.  \r\n- **ArchivePath:** Carpeta destino para los archivos comprimidos y repositorio de archivo.  \r\n- **CompressAfterDays:** D\u00EDas de antig\u00FCedad para entrar en compresi\u00F3n (por defecto 7).  \r\n- **PurgeAfterDays:** D\u00EDas de antig\u00FCedad para purgar archivos originales (por defecto 30).  \r\n- **MaxArchiveSizeMB:** Tama\u00F1o m\u00E1ximo del repositorio de archivo; si se supera, purga ZIPs m\u00E1s antiguos.  \r\n- **DryRun:** Simula todas las acciones, genera auditor\u00EDa, no modifica archivos.  \r\n- **ExcludePatterns:** Patrones tipo wildcard para no tocar archivos sensibles o en uso.  \r\n- **ExecutionLogPath:** Ruta del log de ejecuci\u00F3n; si no se indica, se crea en %TEMP%\\LogRotation.  \r\n- **AuditCsvPath / AuditJsonPath:** Rutas para la auditor\u00EDa; se crean por defecto en %TEMP%\\LogRotation.  \r\n- **VerboseConsole:** Imprime el log de ejecuci\u00F3n en consola adem\u00E1s de archivo.  \r\n- **IncludeEmptyDirs:** Habilita limpieza de directorios vac\u00EDos tras la rotaci\u00F3n.\r\n\r\n### Ejecuci\u00F3n directa\r\n\r\n- **Prueba en modo simulaci\u00F3n (segura):**\r\n  - **Comando:**  \r\n    \u0060\u0060\u0060\r\n    .\\Rotate-Logs.ps1 -LogRoots \u0022C:\\Logs\\App1\u0022,\u0022C:\\Logs\\App2\u0022 -ArchivePath \u0022D:\\Archive\\Logs\u0022 -DryRun -VerboseConsole\r\n    \u0060\u0060\u0060\r\n- **Ejecuci\u00F3n real con defaults:**\r\n  - **Comando:**  \r\n    \u0060\u0060\u0060\r\n    .\\Rotate-Logs.ps1 -LogRoots \u0022C:\\Logs\u0022 -ArchivePath \u0022D:\\Archive\\Logs\u0022\r\n    \u0060\u0060\u0060\r\n- **Con l\u00EDmites espec\u00EDficos:**\r\n  - **Comando:**  \r\n    \u0060\u0060\u0060\r\n    .\\Rotate-Logs.ps1 -LogRoots \u0022C:\\IISLogs\u0022,\u0022C:\\ServiceLogs\u0022 -ArchivePath \u0022\\\\NAS01\\Archive\\Logs\u0022 -CompressAfterDays 3 -PurgeAfterDays 15 -MaxArchiveSizeMB 1024 -ExcludePatterns \u0022*.log.current\u0022,\u0022*.tmp\u0022 -VerboseConsole\r\n    \u0060\u0060\u0060\r\n\r\n### Integraci\u00F3n en tu Gestor de Scripts Universal\r\n\r\n- **Llamada desde UI:**  \r\n  - **Acci\u00F3n:** \u201CRotaci\u00F3n de logs\u201D con icono de archivo-zip y un badge de \u201CDryRun\u201D si est\u00E1 activo.  \r\n  - **Par\u00E1metros visibles:**  \r\n    - **LogRoots:** selector m\u00FAltiple de carpetas (persistentes por perfil).  \r\n    - **ArchivePath:** selector de carpeta destino (permite UNC/NAS).  \r\n    - **CompressAfterDays / PurgeAfterDays / MaxArchiveSizeMB:** sliders con valores por defecto y tooltips.  \r\n    - **DryRun / IncludeEmptyDirs / VerboseConsole:** toggles.  \r\n    - **ExcludePatterns:** cuadro multi-l\u00EDnea con presets por rol (IIS, SQL, App).  \r\n  - **Estado en tiempo real:** muestra el **ExecutionLogPath** y contador de acciones del resumen.  \r\n  - **Salida:** enlaces al **CSV/JSON** de auditor\u00EDa y al **log** final.\r\n\r\n- **Ejecuci\u00F3n desde backend (ejemplo):**\r\n  - **PowerShell:**  \r\n    \u0060\u0060\u0060\r\n    $args = @{\r\n      LogRoots = @(\u0022C:\\Logs\\App1\u0022,\u0022C:\\Logs\\App2\u0022)\r\n      ArchivePath = \u0022D:\\Archive\\Logs\u0022\r\n      CompressAfterDays = 7\r\n      PurgeAfterDays = 30\r\n      MaxArchiveSizeMB = 2048\r\n      DryRun = $false\r\n      ExcludePatterns = @(\u0022*.lock\u0022,\u0022*.tmp\u0022,\u0022*.log.current\u0022)\r\n      VerboseConsole = $true\r\n    }\r\n    Start-Process powershell -ArgumentList \u0022-NoProfile\u0022,\u0022-ExecutionPolicy\u0022,\u0022Bypass\u0022,\u0022-File\u0022,\u0022Rotate-Logs.ps1\u0022, @(\r\n      \u0022-LogRoots\u0022, ($args.LogRoots -join \u0022,\u0022),\r\n      \u0022-ArchivePath\u0022, $args.ArchivePath,\r\n      \u0022-CompressAfterDays\u0022, $args.CompressAfterDays,\r\n      \u0022-PurgeAfterDays\u0022, $args.PurgeAfterDays,\r\n      \u0022-MaxArchiveSizeMB\u0022, $args.MaxArchiveSizeMB,\r\n      $args.DryRun ? \u0022-DryRun\u0022 : \u0022\u0022,\r\n      \u0022-ExcludePatterns\u0022, ($args.ExcludePatterns -join \u0022,\u0022),\r\n      $args.VerboseConsole ? \u0022-VerboseConsole\u0022 : \u0022\u0022\r\n    ) -Wait\r\n    \u0060\u0060\u0060\r\n  - **UI:** muestra progreso por ra\u00EDz (barra) y totales por acci\u00F3n (tabla compacta: Compress, Purge-Age, Purge-Size).\r\n\r\n---\r\n\r\n## Pensamiento profundo aplicado\r\n\r\n- **Robustez:**\r\n  - **Idempotencia:** ZIP nombrado por carpeta\u002Bfecha; si existe, no se recrea. Evita recomprimir duplicados.  \r\n  - **Bloqueos:** detecci\u00F3n de archivos bloqueados para no intentar comprimir/purgar.  \r\n  - **Exclusiones:** patrones wildcard para evitar tocar transacciones en curso (*.current, *.lck, *.tmp).  \r\n  - **Estructura de archivo:** YYYY/MM/DD/source para trazabilidad y limpieza por periodos.\r\n\r\n- **Auditor\u00EDa:**\r\n  - **Detalles:** cada acci\u00F3n con timestamp, source, target, tama\u00F1o y status (OK/ERROR/DRYRUN).  \r\n  - **Formatos:** CSV para an\u00E1lisis r\u00E1pido y JSON para integraci\u00F3n en tu gestor/reportes.  \r\n  - **Resumen final:** tabla con conteo y tama\u00F1o agregado por acci\u00F3n.  \r\n  - **Logs:** archivo de ejecuci\u00F3n con niveles INFO/WARN/ERROR y opcional salida en consola.\r\n\r\n- **Escalabilidad:**\r\n  - **Multirra\u00EDz:** procesa N carpetas en una sola corrida.  \r\n  - **Control de tama\u00F1o:** purga incremental de ZIPs antiguos hasta cumplir el umbral.  \r\n  - **Paralelismo opcional (extensi\u00F3n):** se puede paralelizar por ra\u00EDz con Start-Job/ThreadJob garantizando lock de escritura al CSV/JSON mediante colas y merge al final.\r\n\r\n- **Seguridad:**\r\n  - **Rutas seguras:** no hardcodea rutas; defaults se crean en %TEMP%\\LogRotation para logs/auditor\u00EDa.  \r\n  - **Evitar borrados cr\u00EDticos:** purga solo en ra\u00EDces especificadas; nunca toca ArchivePath fuera de *.zip.  \r\n  - **Rollback b\u00E1sico:** DryRun para verificar; en ejecuci\u00F3n real, las purgas son definitivas. Para rollback extendido, ver extensiones.  \r\n  - **Permisos:** valida existencia y crea directorios; si falla, registra en auditor\u00EDa sin abortar toda la corrida.\r\n\r\n---\r\n\r\n## Extensiones recomendadas\r\n\r\n- **Mejoras opcionales:**\r\n  - **Multihost:** ejecutar en varios equipos v\u00EDa WinRM/PSRemoting con preset de ra\u00EDces por rol (IIS, SQL, App).  \r\n  - **Notificaciones:** resumen por correo/Teams con tabla de acciones y enlaces al CSV/JSON.  \r\n  - **Perfiles/presets:** JSON de configuraci\u00F3n por entorno (DEV/QA/PROD) consumido por el m\u00F3dulo.  \r\n  - **Comparativos:** hash de ZIP (SHA256) y diff de conteos por d\u00EDa para detectar anomal\u00EDas.  \r\n  - **Compresi\u00F3n inteligente:** agrupar por tama\u00F1o objetivo (p. ej., ~500MB por zip) y por fecha de \u00FAltima escritura.\r\n\r\n- **Siguiente paso (propuesta concreta):**\r\n  - **Paralelismo por ra\u00EDz con merge de auditor\u00EDa:** lanzar un job por LogRoot, escribir auditor\u00EDa temporal aislada y al finalizar, merge secuencial y consolidaci\u00F3n de resumen.  \r\n  - **Rollback extendido:** mover a \u201C.trash\u201D dentro de ArchivePath por 24\u201348h antes de eliminaci\u00F3n definitiva, con tarea de limpieza programada.  \r\n  - **Preset JSON:** a\u00F1ade un par\u00E1metro \u0060-ConfigPath\u0060 que cargue LogRoots, exclusiones y umbrales.  \r\n  - **UI:** tarjetas por ra\u00EDz con contadores en vivo y un toggle \u201CSimulaci\u00F3n\u201D prominente. Badge de l\u00EDmite de archivo cuando el umbral se exceda.\r\n\r\n12. **Sincronizaci\u00F3n de carpetas:** Copiar diferencial con checksum (robocopy \u002B resumen).\r\n## Resumen del m\u00F3dulo\r\n\r\n- **Prop\u00F3sito:** Sincronizar carpetas de forma diferencial y confiable en Windows, usando Robocopy para rendimiento y un verificador de checksum (SHA256 por defecto) para asegurar integridad de los archivos copiados. Genera auditor\u00EDas en CSV/JSON y un resumen de resultados para trazabilidad.\r\n- **Alcance:**\r\n  - **Entradas:** origen/destino, patrones de inclusi\u00F3n/exclusi\u00F3n, modo espejo (mirror), verificaci\u00F3n de checksum, concurrencia, reintentos, ejecuci\u00F3n en simulaci\u00F3n (DryRun).\r\n  - **Salidas:** log de ejecuci\u00F3n detallado, auditor\u00EDa CSV/JSON con cada acci\u00F3n (copiar/actualizar/eliminar/verificado), y un resumen de conteos y tama\u00F1os.\r\n  - **Validaciones:** existencia y permisos de rutas, idempotencia (robocopy diferencial), control seguro de eliminaciones (solo si Mirror=true), y manejo de archivos de sistema/ocultos si se desea.\r\n\r\n## Explicaci\u00F3n de uso\r\n\r\n### Par\u00E1metros\r\n\r\n- **Source / Destination:** Carpetas de origen y destino a sincronizar.\r\n- **IncludePatterns / ExcludePatterns:** Wildcards para incluir o excluir archivos (ej.: \u201C*.log\u201D, \u201C*.tmp\u201D). Incluye subcarpetas.\r\n- **Mirror:** Si est\u00E1 activo, replica en destino eliminando elementos que ya no existen en origen (comportamiento tipo /MIR).\r\n- **VerifyChecksum:** Calcula hash en origen y destino para los archivos copiados/actualizados y confirma integridad.\r\n- **ChecksumAlgorithm:** SHA256 (por defecto), SHA1 o MD5.\r\n- **ThreadCount, RetryCount, WaitSeconds:** Control de concurrencia y reintentos de Robocopy.\r\n- **PreserveAttributes:** Copia atributos y timestamps de directorios tambi\u00E9n (DCOPY:T).\r\n- **UseLongPaths:** Usa el prefijo \\\\?\\ para manejar rutas largas (NTFS) y UNC largas.\r\n- **CopyHiddenSystem:** Incluye archivos Hidden y System si tu caso lo requiere.\r\n- **DryRun:** No modifica nada; lista y audita como simulaci\u00F3n.\r\n- **ExecutionLogPath, AuditCsvPath, AuditJsonPath, SummaryReportPath:** Rutas de salida; si no se especifican, se crean en %TEMP%\\FolderSync.\r\n\r\n### Ejecuci\u00F3n directa\r\n\r\n- **Prueba segura (simulaci\u00F3n):**\r\n  \u0060\u0060\u0060\r\n  .\\Sync-Folders.ps1 -Source \u0022C:\\Data\u0022 -Destination \u0022D:\\Backup\\Data\u0022 -DryRun -VerifyChecksum -IncludePatterns \u0022*.*\u0022 -ExcludePatterns \u0022*.tmp\u0022,\u0022*.bak\u0022\r\n  \u0060\u0060\u0060\r\n- **Copia diferencial est\u00E1ndar:**\r\n  \u0060\u0060\u0060\r\n  .\\Sync-Folders.ps1 -Source \u0022C:\\Projects\u0022 -Destination \u0022\\\\NAS\\Backup\\Projects\u0022 -ThreadCount 8 -RetryCount 2 -WaitSeconds 2 -VerifyChecksum\r\n  \u0060\u0060\u0060\r\n- **Modo espejo con verificaci\u00F3n y rutas largas:**\r\n  \u0060\u0060\u0060\r\n  .\\Sync-Folders.ps1 -Source \u0022C:\\Media\u0022 -Destination \u0022E:\\MediaMirror\u0022 -Mirror -VerifyChecksum -ChecksumAlgorithm SHA256 -UseLongPaths -PreserveAttributes -ExcludePatterns \u0022*.lck\u0022,\u0022*.tmp\u0022\r\n  \u0060\u0060\u0060\r\n\r\n### Integraci\u00F3n en tu Gestor de Scripts Universal\r\n\r\n- **UI sugerida:**\r\n  - **Icono:** doble carpeta con flechas; badge \u201CDryRun\u201D cuando corresponda.\r\n  - **Campos:** \r\n    - **Source/Destination:** selector de carpeta con historial por perfil.\r\n    - **Include/ExcludePatterns:** cuadro multi-l\u00EDnea con presets (Dev, Logs, Media).\r\n    - **Mirror, VerifyChecksum, UseLongPaths, PreserveAttributes, CopyHiddenSystem:** toggles.\r\n    - **ThreadCount/RetryCount/WaitSeconds:** sliders con tooltips.\r\n  - **Estado en vivo:** stream del **ExecutionLogPath** y progreso por conteos (Copied, Skipped, Deleted, Verify).\r\n  - **Salida:** enlaces a **Audit CSV/JSON**, **Robocopy raw log** y **Summary report**.\r\n\r\n- **Llamada desde backend (ejemplo):**\r\n  \u0060\u0060\u0060\r\n  $args = @{\r\n    Source = \u0022C:\\Data\u0022\r\n    Destination = \u0022\\\\NAS01\\Archive\\Data\u0022\r\n    IncludePatterns = @(\u0022*.*\u0022)\r\n    ExcludePatterns = @(\u0022*.tmp\u0022,\u0022*.lock\u0022)\r\n    Mirror = $false\r\n    VerifyChecksum = $true\r\n    ThreadCount = 8\r\n    RetryCount = 2\r\n    WaitSeconds = 2\r\n    UseLongPaths = $true\r\n  }\r\n\r\n  Start-Process powershell -ArgumentList @(\r\n    \u0022-NoProfile\u0022,\u0022-ExecutionPolicy\u0022,\u0022Bypass\u0022,\u0022-File\u0022,\u0022Sync-Folders.ps1\u0022,\r\n    \u0022-Source\u0022, $args.Source,\r\n    \u0022-Destination\u0022, $args.Destination,\r\n    \u0022-IncludePatterns\u0022, ($args.IncludePatterns -join \u0022,\u0022),\r\n    \u0022-ExcludePatterns\u0022, ($args.ExcludePatterns -join \u0022,\u0022),\r\n    $args.Mirror ? \u0022-Mirror\u0022 : \u0022\u0022,\r\n    $args.VerifyChecksum ? \u0022-VerifyChecksum\u0022 : \u0022\u0022,\r\n    \u0022-ThreadCount\u0022, $args.ThreadCount,\r\n    \u0022-RetryCount\u0022, $args.RetryCount,\r\n    \u0022-WaitSeconds\u0022, $args.WaitSeconds,\r\n    $args.UseLongPaths ? \u0022-UseLongPaths\u0022 : \u0022\u0022,\r\n    $args.PreserveAttributes ? \u0022-PreserveAttributes\u0022 : \u0022\u0022,\r\n    $args.CopyHiddenSystem ? \u0022-CopyHiddenSystem\u0022 : \u0022\u0022\r\n  ) -Wait\r\n  \u0060\u0060\u0060\r\n\r\n---\r\n\r\n## Pensamiento profundo aplicado\r\n\r\n- **Robustez:**\r\n  - **Idempotencia:** Robocopy copia solo cambios; con /FFT se minimizan falsos positivos entre NTFS/FAT/UNC. DryRun permite validar efectos sin tocar archivos.\r\n  - **Rutas largas:** opci\u00F3n de \\\\?\\ para evitar errores por path \u003E 260 caracteres.\r\n  - **Bloqueos y reintentos:** /R y /W controlan reintentos; /MT acelera entrenamiento sin saturar I/O.\r\n  - **Atributos:** preserva timestamps y atributos cuando es necesario (DCOPY:T).\r\n\r\n- **Auditor\u00EDa:**\r\n  - **Eventos:** Robocopy-Run (con conteos), Verify (OK/MISMATCH), Delete (si Mirror), y errores.\r\n  - **Formatos:** CSV para an\u00E1lisis inmediato y JSON para integraciones y paneles.\r\n  - **Resumen final:** reporte TXT legible con totales y tama\u00F1os, y enlaces a logs.\r\n\r\n- **Escalabilidad:**\r\n  - **Concurrencia:** Robocopy /MT:8 configurable; presets por tipo de contenido (p. ej., Media = MT:32).\r\n  - **Multihost:** ejecutable remotamente v\u00EDa PSRemoting con rutas UNC; auditor\u00EDas centralizadas en NAS.\r\n  - **Plantillas:** perfiles por rol (Dev/Logs/Media) con Include/Exclude y atributos predefinidos.\r\n\r\n- **Seguridad:**\r\n  - **Mirror con cautela:** solo elimina en destino si Mirror=true; DryRun recomendado antes de activar.\r\n  - **Exclusiones:** evita archivos temporales/lock para reducir inconsistencias.\r\n  - **Integridad:** checksum post-copia detecta divergencias; si hay MISMATCH, queda registrado para remediaci\u00F3n.\r\n\r\n- **Fallbacks y l\u00EDmites:**\r\n  - **Parseo robusto:** el resumen se infiere del output de Robocopy; si el formato var\u00EDa, el m\u00F3dulo sigue funcionando porque la auditor\u00EDa por archivo viene del verificador y no de la tabla.\r\n  - **Errores parciales:** no detiene todo el proceso; registra y contin\u00FAa donde sea razonable.\r\n\r\n---\r\n\r\n## Extensiones recomendadas\r\n\r\n- **Mejoras opcionales:**\r\n  - **Lista exacta de archivos copiados:** parseo de /LOG para eventos \u201CNew File\u201D/\u201CNewer\u201D y auditor\u00EDa por archivo, con tama\u00F1o.\r\n  - **Reintento de mismatches:** recopia autom\u00E1ticamente los archivos con MISMATCH hasta N intentos y marca resultado.\r\n  - **Notificaciones:** env\u00EDo de resumen a correo/Teams con m\u00E9tricas y enlaces a logs.\r\n  - **Presets por rol:** \u0060-ConfigPath\u0060 JSON con perfiles (DEV/QA/PROD) que definen patrones, atributos y espejo.\r\n  - **Comparativos entre snapshots:** guardar inventario antes/despu\u00E9s (CSV) y generar diff con cambios.\r\n\r\n- **Siguiente paso (propuesta concreta):**\r\n  - **A\u00F1adir -ConfigPath y multirra\u00EDz:** permitir una lista de pares Source/Destination, ejecutados en paralelo (ThreadJob) y merge de auditor\u00EDa al final.\r\n  - **Auto-remediaci\u00F3n de checksum:** si \u0060VerifyChecksum\u0060 detecta MISMATCH, reintento de copia y, si persiste, mover a una cuarentena en destino para revisi\u00F3n.\r\n  - **UI:** barra por par (S/D), contador en vivo (Copied/Deleted/Verify), y badge alerta si hay MISMATCH\u003E0.\r\n\r\n13. **Backup incremental:** Programar copias versi\u00F3nadas con retenci\u00F3n y verificaci\u00F3n. \r\n## Resumen del m\u00F3dulo\r\n\r\n- **Prop\u00F3sito:** Realizar backups incrementales versi\u00F3nados en Windows con verificaci\u00F3n de integridad y pol\u00EDticas de retenci\u00F3n. Cada ejecuci\u00F3n crea una \u201Cversi\u00F3n\u201D con metadatos, un cat\u00E1logo de archivos, auditor\u00EDa CSV/JSON, y controla la retenci\u00F3n por edad y/o n\u00FAmero de versiones. Opcionalmente, programa la tarea en el Programador de tareas de Windows.\r\n- **Alcance:**\r\n  - **Entradas:** origen, ra\u00EDz de backup, nombre l\u00F3gico del conjunto, retenci\u00F3n por d\u00EDas y por cantidad de versiones, verificaci\u00F3n de checksum, concurrencia, simulaci\u00F3n (DryRun), programaci\u00F3n.\r\n  - **Salidas:** carpeta de versi\u00F3n con estructura y manifiesto, auditor\u00EDa CSV/JSON, log de ejecuci\u00F3n, resumen final, y verificaci\u00F3n de integridad (OK/MISMATCH).\r\n  - **Validaciones:** existencia de rutas, permisos, idempotencia (catalogar y copiar solo cambios), l\u00EDmites seguros en retenci\u00F3n (no borra fuera del conjunto), y tratamiento de rutas largas.\r\n\r\n## Explicaci\u00F3n de uso\r\n\r\n### Par\u00E1metros\r\n\r\n- **Source:** Carpeta origen a respaldar.\r\n- **RootBackup:** Carpeta ra\u00EDz donde se guardar\u00E1n los backups versi\u00F3nados.\r\n- **SetName:** Nombre del conjunto (alfanum\u00E9rico, guion y guion bajo). Define la subcarpeta del conjunto.\r\n- **RetentionDays / RetentionVersions:** Pol\u00EDtica de retenci\u00F3n por antig\u00FCedad y por n\u00FAmero m\u00E1ximo de versiones. Se aplican ambas.\r\n- **VerifyChecksum / ChecksumAlgorithm:** Verifica integridad comparando hashes entre origen y versi\u00F3n (SHA256 por defecto).\r\n- **ThreadCount / RetryCount / WaitSeconds:** Concurrencia y reintentos de Robocopy.\r\n- **IncludePatterns / ExcludePatterns:** Wildcards para controlar qu\u00E9 se copia.\r\n- **UseLongPaths:** Habilita prefijos \\\\?\\ para rutas largas.\r\n- **DryRun:** Simula la ejecuci\u00F3n (copia y retenci\u00F3n sin modificar), pero genera manifiesto, cat\u00E1logo y auditor\u00EDa.\r\n- **ExecutionLogPath / AuditCsvPath / AuditJsonPath / SummaryReportPath:** Rutas de salida; se crean por defecto en %TEMP%\\BackupIncremental.\r\n- **RegisterSchedule / ScheduleName / ScheduleTrigger:** Registrar/actualizar tarea en el Programador de tareas. Soporta: \u201CDaily HH:MM\u201D, \u201CHourly\u201D, \u201CWeekly Sun 03:00\u201D.\r\n\r\n### Ejecuci\u00F3n directa\r\n\r\n- **Prueba segura (simulaci\u00F3n):**\r\n  \u0060\u0060\u0060\r\n  .\\Backup-Incremental.ps1 -Source \u0022C:\\Data\u0022 -RootBackup \u0022D:\\Backups\u0022 -SetName \u0022DataMain\u0022 -DryRun -VerifyChecksum\r\n  \u0060\u0060\u0060\r\n- **Backup con verificaci\u00F3n y retenci\u00F3n est\u00E1ndar:**\r\n  \u0060\u0060\u0060\r\n  .\\Backup-Incremental.ps1 -Source \u0022C:\\Projects\u0022 -RootBackup \u0022\\\\NAS\\Backups\u0022 -SetName \u0022Projects\u0022 -RetentionDays 30 -RetentionVersions 20 -VerifyChecksum -ThreadCount 8\r\n  \u0060\u0060\u0060\r\n- **Programado diario 02:00 con rutas largas:**\r\n  \u0060\u0060\u0060\r\n  .\\Backup-Incremental.ps1 -Source \u0022C:\\Media\u0022 -RootBackup \u0022E:\\Backups\u0022 -SetName \u0022Media\u0022 -VerifyChecksum -RegisterSchedule -ScheduleName \u0022BackupMedia\u0022 -ScheduleTrigger \u0022Daily 02:00\u0022 -UseLongPaths\r\n  \u0060\u0060\u0060\r\n\r\n### Integraci\u00F3n en tu Gestor de Scripts Universal\r\n\r\n- **UI sugerida:**\r\n  - **Icono:** caja/drive con reloj; badge \u201CVerify\u201D si activo.\r\n  - **Campos:**\r\n    - **Source / RootBackup / SetName:** selectores y texto con validaci\u00F3n de SetName.\r\n    - **RetentionDays / RetentionVersions:** sliders con tooltips.\r\n    - **Include/ExcludePatterns:** cuadro multi-l\u00EDnea con presets (Dev, Logs, Media).\r\n    - **VerifyChecksum, UseLongPaths, DryRun:** toggles.\r\n    - **ThreadCount, RetryCount, WaitSeconds:** sliders.\r\n    - **RegisterSchedule / ScheduleName / ScheduleTrigger:** controles para programaci\u00F3n.\r\n  - **Estado en vivo:** stream del **ExecutionLogPath** y contadores por acci\u00F3n (Version-Created, Verify, Retention-Age, Retention-Count).\r\n  - **Salida:** enlaces a **manifest.json**, **catalog.csv**, **robocopy.log**, **Audit CSV/JSON** y **Summary**.\r\n\r\n- **Llamada desde backend (ejemplo):**\r\n  \u0060\u0060\u0060\r\n  $args = @{\r\n    Source = \u0022C:\\Data\u0022\r\n    RootBackup = \u0022D:\\Backups\u0022\r\n    SetName = \u0022DataMain\u0022\r\n    RetentionDays = 30\r\n    RetentionVersions = 20\r\n    VerifyChecksum = $true\r\n    ThreadCount = 8\r\n    RetryCount = 2\r\n    WaitSeconds = 2\r\n    UseLongPaths = $true\r\n  }\r\n\r\n  Start-Process powershell -ArgumentList @(\r\n    \u0022-NoProfile\u0022,\u0022-ExecutionPolicy\u0022,\u0022Bypass\u0022,\u0022-File\u0022,\u0022Backup-Incremental.ps1\u0022,\r\n    \u0022-Source\u0022, $args.Source,\r\n    \u0022-RootBackup\u0022, $args.RootBackup,\r\n    \u0022-SetName\u0022, $args.SetName,\r\n    \u0022-RetentionDays\u0022, $args.RetentionDays,\r\n    \u0022-RetentionVersions\u0022, $args.RetentionVersions,\r\n    $args.VerifyChecksum ? \u0022-VerifyChecksum\u0022 : \u0022\u0022,\r\n    \u0022-ThreadCount\u0022, $args.ThreadCount,\r\n    \u0022-RetryCount\u0022, $args.RetryCount,\r\n    \u0022-WaitSeconds\u0022, $args.WaitSeconds,\r\n    $args.UseLongPaths ? \u0022-UseLongPaths\u0022 : \u0022\u0022\r\n  ) -Wait\r\n  \u0060\u0060\u0060\r\n\r\n---\r\n\r\n## Pensamiento profundo aplicado\r\n\r\n- **Robustez:**\r\n  - **Versionado determinista:** estructura por fecha evita colisiones y facilita limpieza por periodos.\r\n  - **Idempotencia operativa:** Robocopy realiza copiado diferencial; DryRun valida antes de ejecutar real.\r\n  - **Rutas largas:** soporte \\\\?\\ para evitar fallos por l\u00EDmites de 260 caracteres.\r\n  - **Cat\u00E1logo y manifiesto:** snapshot por versi\u00F3n para auditor\u00EDa y trazabilidad.\r\n\r\n- **Auditor\u00EDa y verificaci\u00F3n:**\r\n  - **Eventos:** Version-Created, Verify (OK/MISMATCH), Retention-Age, Retention-Count, Schedule-Register, errores.\r\n  - **Formatos:** CSV y JSON con tama\u00F1os y estados; log crudo de Robocopy para an\u00E1lisis avanzado.\r\n  - **Resumen:** reporte consolidado con conteos y tama\u00F1os, \u00FAtil para tu UI y notificaciones.\r\n\r\n- **Retenci\u00F3n segura:**\r\n  - **Doble pol\u00EDtica:** edad y cantidad; elimina solo dentro del conjunto ($SetName).\r\n  - **Orden estable:** selecci\u00F3n FIFO por orden de las rutas versi\u00F3n (YYYY/MM/DD/HHmmss).\r\n\r\n- **Escalabilidad:**\r\n  - **Concurrencia:** /MT configurable; presets por tipo de contenido.\r\n  - **Multiconjuntos:** puedes lanzar m\u00FAltiples instancias con distintos SetName; opcional -ConfigPath en extensi\u00F3n.\r\n  - **NAS/UNC:** soporte UNC y programaci\u00F3n para ventanas de mantenimiento.\r\n\r\n- **Seguridad:**\r\n  - **Exclusiones inteligentes:** evita temporales y locks comunes.\r\n  - **DryRun:** previa obligatoria en entornos cr\u00EDticos.\r\n  - **Programaci\u00F3n controlada:** argumentos expl\u00EDcitos y ExecutionPolicy Bypass solo para la tarea.\r\n\r\n---\r\n\r\n## Extensiones recomendadas\r\n\r\n- **Mejoras opcionales:**\r\n  - **-ConfigPath (JSON/YAML):** definir m\u00FAltiples conjuntos con retenci\u00F3n y patrones por rol (DEV/QA/PROD), ejecuci\u00F3n en paralelo y merge de auditor\u00EDas.\r\n  - **Compresi\u00F3n por versi\u00F3n:** opci\u00F3n \u0060-CompressVersion\u0060 para crear un ZIP del cat\u00E1logo y/o de ciertos subdirectorios; almacenamiento h\u00EDbrido.\r\n  - **Notificaciones:** env\u00EDo de resumen por correo/Teams con links a manifest, catalog y auditor\u00EDas.\r\n  - **Deduplicaci\u00F3n simple:** c\u00E1lculo de hashes para evitar almacenar duplicados grandes entre versiones (marcar referencias, no borrar).\r\n  - **Restore helper:** script complementario para restaurar una versi\u00F3n o archivo, con b\u00FAsqueda por cat\u00E1logo.\r\n\r\n- **Siguiente paso (propuesta concreta):**\r\n  - A\u00F1adir \u0060-ConfigPath\u0060 para orquestar m\u00FAltiples backups en un solo run, con ThreadJobs por conjunto y consolidaci\u00F3n de auditor\u00EDa.  \r\n  - Implementar \u201Ccuarentena de inconsistencias\u201D: si \u0060VerifyChecksum\u0060 detecta MISMATCH, recopia 1 vez y, si persiste, marca en cat\u00E1logo y alerta en UI.  \r\n  - Integrar con tu Gestor: tarjetas por conjunto con medallas de \u201CVersion OK\u201D, \u201CRetention Applied\u201D, \u201CMISMATCH\u003E0\u201D y un gr\u00E1fico de versiones en el tiempo.\r\n\r\n14. **Restauraci\u00F3n r\u00E1pida:** Reconstruir perfiles o apps desde backup con reporte final.\r\n## Resumen del m\u00F3dulo\r\n\r\n- **Prop\u00F3sito:** Restaurar r\u00E1pidamente perfiles de usuario o aplicaciones desde backups versi\u00F3nados, con selecci\u00F3n simple de versi\u00F3n y componentes, validaciones de integridad, y un reporte final (CSV/JSON/TXT) para auditor\u00EDa. Enfocado en tiempos de recuperaci\u00F3n cortos y m\u00EDnima fricci\u00F3n.\r\n- **Alcance:**\r\n  - **Entradas:** ra\u00EDz de backup, conjunto (\u0060SetName\u0060), versi\u00F3n (auto-selecci\u00F3n por UI simple), origen para cat\u00E1logo, destino de restauraci\u00F3n, modo de sobreescritura, filtros de rutas, verificaci\u00F3n de checksum, simulaci\u00F3n (\u0060DryRun\u0060).\r\n  - **Salidas:** restauraci\u00F3n diferencial (solo faltantes/diferentes), reporte final (ejecuci\u00F3n \u002B auditor\u00EDa CSV/JSON \u002B resumen), logs detallados, y validaci\u00F3n (OK/MISMATCH).\r\n  - **Validaciones:** existencia de versi\u00F3n y cat\u00E1logo, rutas y permisos, idempotencia (no recopia id\u00E9nticos), seguridad (exclusiones), y \u201CUI\u201D simple para selecci\u00F3n (Out-GridView con fallback TTY).\r\n\r\n## Explicaci\u00F3n de uso\r\n\r\n### Par\u00E1metros\r\n\r\n- **RootBackup / SetName:** Ubicaci\u00F3n del conjunto de backups versi\u00F3nados (estructura YYYY/MM/DD/HHmmss). El script detecta versiones autom\u00E1ticamente.\r\n- **VersionPath:** Ruta exacta de la versi\u00F3n a restaurar. Si no se indica, la UI simple permite elegir o se toma la m\u00E1s reciente.\r\n- **RestoreTarget:** Carpeta destino donde se reconstruir\u00E1 el perfil/app.\r\n- **Overwrite:** No es necesario, Robocopy maneja diferencias; \u00FAsalo como intenci\u00F3n informativa en tu UI (el m\u00F3dulo ya copia diferencial).\r\n- **IncludeSubpaths:** Lista de subcarpetas relativas a la versi\u00F3n para restaurar; por defecto \u201C*\u201D (todo).\r\n- **ExcludePatterns:** Patrones a excluir (temporales, locks, etc.).\r\n- **VerifyChecksum / ChecksumAlgorithm:** Valida integridad de los archivos restaurados.\r\n- **ThreadCount / RetryCount / WaitSeconds:** Concurrencia y reintentos del Robocopy.\r\n- **UseLongPaths:** Manejo de rutas largas \\\\?\\ para NTFS y UNC.\r\n- **DryRun:** Simula la restauraci\u00F3n (lista, auditor\u00EDa y reporte) sin copiar.\r\n\r\n### Ejecuci\u00F3n directa\r\n\r\n- **Restaurar todo desde la \u00FAltima versi\u00F3n (simulaci\u00F3n \u002B verificaci\u00F3n):**\r\n  \u0060\u0060\u0060\r\n  .\\Restore-Quick.ps1 -RootBackup \u0022D:\\Backups\u0022 -SetName \u0022DataMain\u0022 -RestoreTarget \u0022C:\\Data\u0022 -DryRun -VerifyChecksum\r\n  \u0060\u0060\u0060\r\n- **Restaurar versi\u00F3n espec\u00EDfica y solo subcarpetas:**\r\n  \u0060\u0060\u0060\r\n  .\\Restore-Quick.ps1 -RootBackup \u0022\\\\NAS\\Backups\u0022 -SetName \u0022Projects\u0022 -VersionPath \u0022\\\\NAS\\Backups\\Projects\\2025\\10\\17\\124200\u0022 -RestoreTarget \u0022D:\\Projects\u0022 -IncludeSubpaths \u0022RepoA\u0022,\u0022RepoB\u0022 -VerifyChecksum\r\n  \u0060\u0060\u0060\r\n- **Rutas largas y exclusiones adicionales:**\r\n  \u0060\u0060\u0060\r\n  .\\Restore-Quick.ps1 -RootBackup \u0022E:\\Backups\u0022 -SetName \u0022Media\u0022 -RestoreTarget \u0022C:\\Media\u0022 -UseLongPaths -ExcludePatterns \u0022*.tmp\u0022,\u0022*.lck\u0022,\u0022*.cache\u0022\r\n  \u0060\u0060\u0060\r\n\r\n### Integraci\u00F3n en tu Gestor de Scripts Universal (UI simple)\r\n\r\n- **Interacci\u00F3n m\u00EDnima:**\r\n  - **Selecci\u00F3n de versi\u00F3n:** abre Out-GridView con lista de versiones (fecha y tama\u00F1o). Si no hay UI, usa la m\u00E1s reciente y lo indica en log.\r\n  - **Selecci\u00F3n de subcarpetas:** segundo Out-GridView para marcar subcarpetas; si se omite, restaura todo.\r\n- **Llamada desde backend (ejemplo):**\r\n  \u0060\u0060\u0060\r\n  $args = @{\r\n    RootBackup = \u0022D:\\Backups\u0022\r\n    SetName = \u0022DataMain\u0022\r\n    RestoreTarget = \u0022C:\\Data\u0022\r\n    VerifyChecksum = $true\r\n    ThreadCount = 8\r\n    UseLongPaths = $true\r\n  }\r\n  Start-Process powershell -ArgumentList @(\r\n    \u0022-NoProfile\u0022,\u0022-ExecutionPolicy\u0022,\u0022Bypass\u0022,\u0022-File\u0022,\u0022Restore-Quick.ps1\u0022,\r\n    \u0022-RootBackup\u0022,$args.RootBackup,\u0022-SetName\u0022,$args.SetName,\u0022-RestoreTarget\u0022,$args.RestoreTarget,\r\n    $args.VerifyChecksum ? \u0022-VerifyChecksum\u0022 : \u0022\u0022,\r\n    \u0022-ThreadCount\u0022,$args.ThreadCount,\r\n    $args.UseLongPaths ? \u0022-UseLongPaths\u0022 : \u0022\u0022\r\n  ) -Wait\r\n  \u0060\u0060\u0060\r\n- **Visualizaci\u00F3n de estado en tu UI:**\r\n  - **Log en vivo:** tail del ExecutionLogPath.\r\n  - **Contadores:** Restore-Run, Verify (OK/MISMATCH/MISSING).\r\n  - **Salida:** enlaces a Robocopy raw log, auditor\u00EDas y resumen final.\r\n\r\n---\r\n\r\n## Pensamiento profundo aplicado\r\n\r\n- **Robustez:**\r\n  - **Idempotencia:** Robocopy copia solo lo que falta o difiere; evita recopia y minimiza riesgo.\r\n  - **UI simple:** Out-GridView reduce fricci\u00F3n y errores humanos en la selecci\u00F3n; fallback seguro a la \u00FAltima versi\u00F3n.\r\n  - **Rutas largas:** opci\u00F3n \\\\?\\ para evitar fallos por path \u003E 260 chars.\r\n  - **Subcarpetas:** restauraci\u00F3n granular por componentes de perfiles/apps, \u00FAtil para RTO corto.\r\n\r\n- **Auditor\u00EDa y reporte:**\r\n  - **Eventos:** Restore-Run por run (global o por subpath) y Verify detallado con estados OK/MISMATCH/MISSING.\r\n  - **Formatos:** CSV/JSON integrables, m\u00E1s resumen TXT legible para tu dashboard o env\u00EDo r\u00E1pido.\r\n  - **Trazabilidad:** guarda el log crudo de Robocopy y todo se referencia en el resumen.\r\n\r\n- **Seguridad:**\r\n  - **Exclusiones:** evita temporales/locks; reduce inconsistencias.\r\n  - **DryRun:** modo obligatorio recomendado antes de ejecuci\u00F3n real en entornos cr\u00EDticos.\r\n  - **Permisos:** crea destino de forma segura; no borra fuera de su \u00E1mbito.\r\n\r\n- **Casos l\u00EDmite contemplados:**\r\n  - **Sin UI disponible:** contin\u00FAa con la versi\u00F3n m\u00E1s reciente y lo registra.\r\n  - **Subcarpeta inexistente:** avisa y contin\u00FAa con el resto (WARN \u002B auditor\u00EDa).\r\n  - **Verificaci\u00F3n parcial:** checksum aplica solo a lo elegido; archivos faltantes se registran como MISSING.\r\n\r\n- **Rendimiento:**\r\n  - **Concurrencia /MT:** configurable para acelerar; reintentos moderados /R y /W.\r\n  - **E/S minimizada:** /NP,/NFL,/NDL mantienen logs concisos mientras el raw log conserva detalles.\r\n\r\n---\r\n\r\n## Extensiones recomendadas\r\n\r\n- **Mejoras opcionales:**\r\n  - **Selector por cat\u00E1logo:** mostrar \u0060catalog.csv\u0060 para elegir archivos concretos con Out-GridView.\r\n  - **Cuarentena de mismatches:** mover archivos con MISMATCH a una subcarpeta para revisi\u00F3n.\r\n  - **Notificaciones:** enviar resumen (TXT/CSV) a correo/Teams integrado con tu gestor.\r\n  - **Pre-restore diff:** inventario del destino antes y despu\u00E9s, con diff para auditor\u00EDa.\r\n  - **Preset de perfiles:** JSON de mapeos \u201CPerfilUsuario\u201D, \u201CIISApp\u201D, \u201CServicioX\u201D con subpaths t\u00EDpicos y exclusiones.\r\n\r\n- **Siguiente paso (propuesta concreta):**\r\n  - A\u00F1adir \u0060-CatalogDriven\u0060 para restaurar por lista desde \u0060catalog.csv\u0060, con barra de progreso y reintentos autom\u00E1ticos en mismatches.  \r\n  - Integrar un \u0060-ConfigPath\u0060 con presets de restauraci\u00F3n por rol y un \u201Cwizard\u201D de 3 pasos en tu UI: versi\u00F3n \u2192 componentes \u2192 confirmaci\u00F3n (DryRun primero). \r\n\r\n15. **Gesti\u00F3n de procesos:** Terminar procesos colgados con lista blanca y raz\u00F3n de cierre.\r\n## Resumen del m\u00F3dulo\r\n\r\n- **Prop\u00F3sito:** Identificar y terminar procesos colgados de forma segura, respetando una lista blanca y registrando la raz\u00F3n de cierre. Incluye UI simple para confirmaci\u00F3n, simulaci\u00F3n (DryRun), auditor\u00EDa CSV/JSON y log de ejecuci\u00F3n.\r\n- **Alcance:**\r\n  - **Entradas:** criterios de \u201Ccolgado\u201D (no responde, sin CPU, runtime excesivo), lista blanca por nombre/ruta/usuario, selecci\u00F3n manual opcional, modo DryRun, cierre forzado y cierre de hijos.\r\n  - **Salidas:** procesos finalizados con raz\u00F3n y detalles (PID, nombre, usuario, ruta), auditor\u00EDa CSV/JSON, log y resumen final.\r\n  - **Validaciones:** existencia del proceso al actuar, respeto a lista blanca, exclusi\u00F3n de procesos cr\u00EDticos del sistema, idempotencia (no intentar finalizar procesos ya muertos).\r\n\r\n## Explicaci\u00F3n de uso\r\n\r\n### Par\u00E1metros\r\n\r\n- **SampleIntervalSeconds:** Segundo muestreo para calcular delta de CPU. Si el delta ~0 ms, se considera ZeroCPU.\r\n- **MaxRuntimeMinutes:** Umbral de runtime excesivo (ExceededRuntime).\r\n- **OnlyNotResponding:** Limita candidatos a procesos con ventana principal y que no responden.\r\n- **IncludeServices:** Permite incluir procesos sin UI/sesi\u00F3n 0 (servicios/sistema). Desactivado por seguridad.\r\n- **WhitelistNames / WhitelistPaths / WhitelistUsers:** Lista blanca por nombre, ruta completa y usuario. Incluye cr\u00EDticos extras por defecto.\r\n- **ExtraCriticalNames:** Nombres de procesos del sistema que nunca se deben terminar.\r\n- **DryRun:** Simula terminaciones para validar criterios y UI.\r\n- **ForceKill:** Usa Stop-Process -Force. Activo por defecto; puedes desactivarlo.\r\n- **KillChildren:** Intenta terminar procesos hijos del candidato.\r\n- **ExecutionLogPath / AuditCsvPath / AuditJsonPath / SummaryReportPath:** Salidas de log/auditor\u00EDa con defaults en %TEMP%\\ProcessManager.\r\n\r\n### Ejecuci\u00F3n directa\r\n\r\n- **Simulaci\u00F3n segura (UI simple):**\r\n  \u0060\u0060\u0060\r\n  .\\Manage-Processes.ps1 -DryRun -OnlyNotResponding\r\n  \u0060\u0060\u0060\r\n- **Detecci\u00F3n por ZeroCPU y runtime, respetando lista blanca:**\r\n  \u0060\u0060\u0060\r\n  .\\Manage-Processes.ps1 -SampleIntervalSeconds 5 -MaxRuntimeMinutes 180 -WhitelistNames \u0022explorer\u0022,\u0022powershell\u0022,\u0022svchost\u0022 -KillChildren\r\n  \u0060\u0060\u0060\r\n- **Incluir servicios (cautela) y desactivar Force:**\r\n  \u0060\u0060\u0060\r\n  .\\Manage-Processes.ps1 -IncludeServices -ForceKill:$false -MaxRuntimeMinutes 60\r\n  \u0060\u0060\u0060\r\n\r\n### Integraci\u00F3n en tu Gestor de Scripts Universal (UI simple)\r\n\r\n- **UI m\u00EDnima:**\r\n  - **Toggles:** DryRun, OnlyNotResponding, IncludeServices, KillChildren, ForceKill.\r\n  - **Campos:** SampleIntervalSeconds, MaxRuntimeMinutes.\r\n  - **Listas:** WhitelistNames/Paths/Users (multi-l\u00EDnea).\r\n  - **Estado:** tail del ExecutionLogPath y contador por acci\u00F3n del resumen.\r\n- **Flujo:**\r\n  1. Ejecuta muestreo y muestra candidatos en Out-GridView para selecci\u00F3n.\r\n  2. Si no hay Out-GridView, pide \u00EDndices en consola.\r\n  3. Aplica terminaci\u00F3n y registra auditor\u00EDa.\r\n- **Backend (ejemplo):**\r\n  \u0060\u0060\u0060\r\n  $args = @{\r\n    SampleIntervalSeconds = 5\r\n    MaxRuntimeMinutes = 120\r\n    WhitelistNames = @(\u0022explorer\u0022,\u0022svchost\u0022,\u0022powershell\u0022)\r\n    DryRun = $false\r\n    OnlyNotResponding = $true\r\n  }\r\n\r\n  Start-Process powershell -ArgumentList @(\r\n    \u0022-NoProfile\u0022,\u0022-ExecutionPolicy\u0022,\u0022Bypass\u0022,\u0022-File\u0022,\u0022Manage-Processes.ps1\u0022,\r\n    \u0022-SampleIntervalSeconds\u0022,$args.SampleIntervalSeconds,\r\n    \u0022-MaxRuntimeMinutes\u0022,$args.MaxRuntimeMinutes,\r\n    \u0022-WhitelistNames\u0022,($args.WhitelistNames -join \u0022,\u0022),\r\n    $args.DryRun ? \u0022-DryRun\u0022 : \u0022\u0022,\r\n    $args.OnlyNotResponding ? \u0022-OnlyNotResponding\u0022 : \u0022\u0022\r\n  ) -Wait\r\n  \u0060\u0060\u0060\r\n\r\n---\r\n\r\n## Pensamiento profundo aplicado\r\n\r\n- **Robustez:**\r\n  - **M\u00E9tricas dobles:** muestreo de CPU en dos puntos evita falsos positivos por instant\u00E1neas.\r\n  - **NotResponding real:** usa MainWindowHandle y Responding para GUI; filtrado opcional de servicios.\r\n  - **Runtime controlado:** protege contra procesos fugitivos de larga ejecuci\u00F3n.\r\n  - **Idempotencia:** verifica existencia antes de terminar; los ya finalizados no se reintentan.\r\n\r\n- **Auditor\u00EDa:**\r\n  - **Raz\u00F3n expl\u00EDcita:** Reason agrega \u201CNotResponding\u201D, \u201CZeroCPU\u201D y/o \u201CExceededRuntime\u201D.\r\n  - **Eventos:** Skip-Whitelist, Already-Exited, Terminate, Process-Error; estados OK/ERROR/DRYRUN.\r\n  - **Formatos:** CSV/JSON listos para paneles; resumen TXT con conteos.\r\n\r\n- **Seguridad:**\r\n  - **Lista blanca y cr\u00EDticos:** evita terminar procesos del sistema y los definidos por el usuario.\r\n  - **Servicios excluidos por defecto:** reduce riesgos; activaci\u00F3n expl\u00EDcita requerida.\r\n  - **DryRun y confirmaci\u00F3n:** UI simple obliga selecci\u00F3n consciente antes de actuar.\r\n\r\n- **Casos l\u00EDmite:**\r\n  - **Acceso denegado a MainModule/Owner:** manejado con try/catch; ruta/usuario pueden ser null, se sigue con criterios disponibles.\r\n  - **Procesos ef\u00EDmeros:** pueden desaparecer entre muestras; se registra Already-Exited.\r\n  - **Sesi\u00F3n 0/servicios:** filtrados a menos que IncludeServices est\u00E9 activo.\r\n\r\n- **Escalabilidad:**\r\n  - **Ligero y portable:** solo cmdlets est\u00E1ndar y CIM; Out-GridView opcional.\r\n  - **Presets por rol:** listas blancas y umbrales ajustables por entorno (DEV/QA/PROD), integrables en tu Gestor.\r\n\r\n---\r\n\r\n## Extensiones recomendadas\r\n\r\n- **Mejoras opcionales:**\r\n  - **-ConfigPath (JSON):** cargar umbrales y listas blancas por rol; ejecutar en lote con reportes consolidados.\r\n  - **Modo \u201Cquarantine\u201D:** en vez de terminar, reducir prioridad/affinity y registrar seguimiento antes de matar.\r\n  - **Notificaciones:** enviar resumen a correo/Teams si hubo terminaciones o errores.\r\n  - **Kill pattern seguro:** terminar por patr\u00F3n de ruta/nombre con confirmaci\u00F3n.\r\n  - **Registro de \u00E1rbol:** inventario de procesos hijos antes/despu\u00E9s, para auditor\u00EDa profunda.\r\n\r\n- **Siguiente paso:**\r\n  - A\u00F1adir \u0060-ConfigPath\u0060 y presets por rol, m\u00E1s un \u201Cwizard\u201D simple en tu UI: muestreo \u2192 selecci\u00F3n \u2192 confirmaci\u00F3n (DryRun recomendado) \u2192 ejecuci\u00F3n con reporte consolidado. \u00BFLo integramos en tu Gestor con perfiles DEV/QA/PROD?\r\n\r\n16. **Monitor de rendimiento:** Capturar m\u00E9tricas (CPU, RAM, disco, red) y alertar umbrales.\r\n  ## Resumen del m\u00F3dulo\r\n\r\n- **Prop\u00F3sito:** Monitorear en tiempo real rendimiento de CPU, RAM, disco y red, con alertas por umbrales, registro continuo en consola, logs en archivo, y auditor\u00EDa en CSV/JSON. La ventana permanece abierta y muestra progreso en vivo.\r\n- **Alcance:**\r\n  - **Entradas:** intervalo de muestreo, duraci\u00F3n o cantidad de muestras, umbrales por m\u00E9trica, selecci\u00F3n de adaptadores/red y discos, n\u00FAmero de consecutivos para alertar, modo consola y persistencia de ventana.\r\n  - **Salidas:** log de ejecuci\u00F3n, auditor\u00EDa de muestras (CSV/JSON), resumen final (TXT), alertas en consola con detalle de m\u00E9tricas fuera de umbral.\r\n  - **Validaciones:** existencia de contadores, manejo de adaptadores/discos inexistentes, robustez ante errores transitorios de Get-Counter, idempotencia (solo lectura).\r\n\r\n## Explicaci\u00F3n de uso\r\n\r\n### Par\u00E1metros\r\n\r\n- **IntervalSeconds / Samples / DurationMinutes:** Controlan el ritmo y la duraci\u00F3n del monitoreo. Si \u0060Samples=0\u0060, se usa \u0060DurationMinutes\u0060.\r\n- **CpuHighPercent / RamHighPercent / DiskBusyHighPercent / DiskQueueHigh / NetHighMbps:** Umbrales de alerta para cada m\u00E9trica.\r\n- **AlertOnConsecutive:** Requiere N muestras consecutivas fuera de umbral antes de alertar (reduce ruido).\r\n- **IncludeAdapters / ExcludeAdapters:** Selecci\u00F3n de adaptadores de red. Por defecto se excluyen pseudo-interfaces.\r\n- **IncludeDisks:** Instancias espec\u00EDficas de PhysicalDisk (ej.: \u00220 C:\u0022, \u00221 D:\u0022). Si se omite, usa \u0060_Total\u0060.\r\n- **ExecutionLogPath / AuditCsvPath / AuditJsonPath / SummaryReportPath:** Salidas; por defecto en \u0060%TEMP%\\PerfMonitor\u0060.\r\n- **KeepWindowOpen:** Mantiene la ventana abierta al finalizar (mensaje \u201CPresiona Enter\u2026\u201D).\r\n- **VerboseConsole:** Muestra todo en consola en tiempo real (por defecto activo).\r\n\r\n### Ejecuci\u00F3n directa\r\n\r\n- **Monitoreo b\u00E1sico 5 min, consola en vivo, ventana abierta al final:**\r\n  \u0060\u0060\u0060\r\n  .\\Monitor-Performance.ps1 -DurationMinutes 5 -IntervalSeconds 3 -KeepWindowOpen\r\n  \u0060\u0060\u0060\r\n- **Umbrales estrictos y adaptadores espec\u00EDficos:**\r\n  \u0060\u0060\u0060\r\n  .\\Monitor-Performance.ps1 -DurationMinutes 10 -CpuHighPercent 90 -RamHighPercent 90 -NetHighMbps 200 \u0060\r\n    -IncludeAdapters \u0022Ethernet\u0022,\u0022Wi-Fi\u0022 -AlertOnConsecutive 2 -KeepWindowOpen\r\n  \u0060\u0060\u0060\r\n- **Discos espec\u00EDficos y reporte detallado:**\r\n  \u0060\u0060\u0060\r\n  .\\Monitor-Performance.ps1 -Samples 100 -IntervalSeconds 2 -IncludeDisks \u00220 C:\u0022,\u00221 D:\u0022 -DiskBusyHighPercent 85 -DiskQueueHigh 1.5 -KeepWindowOpen\r\n  \u0060\u0060\u0060\r\n\r\n### Integraci\u00F3n en tu Gestor de Scripts Universal (UI simple)\r\n\r\n- **Controles:**\r\n  - **Campos:** IntervalSeconds, Samples o DurationMinutes.\r\n  - **Umbrales:** Cpu/Ram/Disk/Queue/Net (inputs num\u00E9ricos).\r\n  - **Listas:** IncludeAdapters, IncludeDisks (multi-l\u00EDnea).\r\n  - **Toggles:** VerboseConsole, KeepWindowOpen.\r\n- **Visualizaci\u00F3n:**\r\n  - **Log en vivo:** tail del \u0060ExecutionLogPath\u0060.\r\n  - **Alertas:** resaltar l\u00EDneas que contienen \u201CALERTA:\u201D y mostrar contador de consecutivos.\r\n  - **Salidas:** enlaces a Audit CSV/JSON y Summary TXT.\r\n- **Llamada desde backend (ejemplo):**\r\n  \u0060\u0060\u0060\r\n  $args = @{\r\n    IntervalSeconds = 3\r\n    DurationMinutes = 5\r\n    CpuHighPercent = 85\r\n    RamHighPercent = 85\r\n    NetHighMbps = 100\r\n    KeepWindowOpen = $true\r\n  }\r\n\r\n  Start-Process powershell -ArgumentList @(\r\n    \u0022-NoProfile\u0022,\u0022-ExecutionPolicy\u0022,\u0022Bypass\u0022,\u0022-File\u0022,\u0022Monitor-Performance.ps1\u0022,\r\n    \u0022-IntervalSeconds\u0022,$args.IntervalSeconds,\r\n    \u0022-DurationMinutes\u0022,$args.DurationMinutes,\r\n    \u0022-CpuHighPercent\u0022,$args.CpuHighPercent,\r\n    \u0022-RamHighPercent\u0022,$args.RamHighPercent,\r\n    \u0022-NetHighMbps\u0022,$args.NetHighMbps,\r\n    $args.KeepWindowOpen ? \u0022-KeepWindowOpen\u0022 : \u0022\u0022\r\n  )\r\n  \u0060\u0060\u0060\r\n\r\n---\r\n\r\n## Pensamiento profundo aplicado\r\n\r\n- **Robustez:**\r\n  - Maneja errores de \u0060Get-Counter\u0060 y contadores no disponibles sin detener la ejecuci\u00F3n.\r\n  - Usa consecutivos para evitar alertas espurias; configurable por par\u00E1metro.\r\n  - Calcula RAM% con TotalPhysicalMemory real, evitando suposiciones.\r\n  - Permite m\u00E9tricas por instancia de disco y por adaptador de red, manteniendo \u0060_Total\u0060 como fallback.\r\n\r\n- **Auditor\u00EDa:**\r\n  - Muestra cada muestra en consola y la guarda en CSV/JSON con timestamp y alertas activas.\r\n  - Log de ejecuci\u00F3n con colores en tiempo real, f\u00E1cil de tail en tu UI.\r\n  - Resumen final con m\u00E1ximos observados por m\u00E9trica.\r\n\r\n- **Escalabilidad:**\r\n  - Parametrizable por perfiles (DEV/QA/PROD) con presets de umbrales y adaptadores.\r\n  - Ligero: solo \u0060Get-Counter\u0060 y CIM, sin dependencias externas.\r\n  - Integrable en dashboard con streaming del log y gr\u00E1ficos en tu plataforma (si luego lo deseas).\r\n\r\n- **Seguridad:**\r\n  - Solo lectura de contadores y WMI; sin cambios en el sistema.\r\n  - Excluye pseudo-interfaces para reducir ruido (personalizable).\r\n\r\n- **Casos l\u00EDmite:**\r\n  - Sin adaptadores v\u00E1lidos: registra \u201Cn/a\u201D y contin\u00FAa.\r\n  - Contadores ausentes o sin permisos: captura excepci\u00F3n y muestra \u201Cn/a\u201D.\r\n  - Duraci\u00F3n vs muestras: calcula \u0060Samples\u0060 autom\u00E1ticamente cuando se usa \u0060DurationMinutes\u0060.\r\n\r\n---\r\n\r\n## Extensiones recomendadas\r\n\r\n- **Mejoras opcionales:**\r\n  - Notificaciones: enviar alerta v\u00EDa correo/Teams cuando se superen umbrales X consecutivos.\r\n  - Persistencia circular: escribir CSV con rotaci\u00F3n por tama\u00F1o/tiempo (para monitoreos largos).\r\n  - Exportar a Prometheus/Influx: endpoint o archivo en formato de m\u00E9tricas.\r\n  - Perfil de carga: medir tambi\u00E9n \u0060\\Processor Information(_Total)\\Processor Frequency\u0060 y latencia de disco.\r\n  - Modo continuo: \u0060-Continuous\u0060 con tecla para detener y rotaci\u00F3n de logs por hora.\r\n\r\n- **Siguiente paso:**\r\n  - A\u00F1adir \u0060-ConfigPath\u0060 para presets de umbrales y selecci\u00F3n de adaptadores/discos por rol.\r\n  - Integrar alertas en tu Gestor: badge rojo/amarillo con contador de consecutivos, y bot\u00F3n \u201CVer detalle\u201D que abre el \u0060ExecutionLogPath\u0060.\r\n  \r\n17. **Optimizaci\u00F3n de arranque:** Deshabilitar startups no cr\u00EDticos por impacto medido.\r\n## Resumen del m\u00F3dulo\r\n\r\n- **Prop\u00F3sito:** Detectar y medir el impacto de programas de inicio (startup) y deshabilitar, de forma segura e interactiva, los no cr\u00EDticos. Mide impacto en tiempo real (CPU/RAM) de los procesos asociados, registra auditor\u00EDa y deja la ventana abierta mostrando progreso.\r\n- **Alcance:**\r\n  - **Entradas:** umbrales de impacto (CPU %, RAM MB), lista blanca (nombres, rutas), duraci\u00F3n de muestreo, DryRun, confirmaci\u00F3n por UI simple, mantener ventana abierta.\r\n  - **Salidas:** consola en vivo con tabla, log de ejecuci\u00F3n, auditor\u00EDa CSV/JSON, resumen TXT, respaldo de entradas deshabilitadas para rollback.\r\n  - **Validaciones:** no toca procesos cr\u00EDticos del sistema ni entradas en lista blanca, backup seguro antes de deshabilitar, idempotencia (no deshabilita dos veces lo mismo).\r\n\r\n## Explicaci\u00F3n de uso\r\n\r\n### Par\u00E1metros\r\n\r\n- **CpuThresholdPercent / RamThresholdMB:** Umbrales para considerar una entrada de impacto High o Medium seg\u00FAn el muestreo en vivo.\r\n- **SampleSeconds:** Duraci\u00F3n del muestreo para calcular delta de CPU y RAM.\r\n- **WhitelistNames / WhitelistPaths:** Entradas que nunca se deshabilitan (por nombre o ruta).\r\n- **DryRun:** Simula el proceso de deshabilitar; igual genera auditor\u00EDa y muestra en consola.\r\n- **KeepWindowOpen:** Mantiene la ventana abierta al finalizar con un prompt de Enter.\r\n- **ExecutionLogPath / AuditCsvPath / AuditJsonPath / SummaryReportPath:** Rutas de salida; se crean por defecto en %TEMP%\\StartupOptimizer.\r\n\r\n### Ejecuci\u00F3n directa\r\n\r\n- **Simulaci\u00F3n segura con UI simple y ventana abierta:**\r\n  \u0060\u0060\u0060\r\n  .\\Optimize-Startup.ps1 -SampleSeconds 3 -CpuThresholdPercent 10 -RamThresholdMB 200 -DryRun -KeepWindowOpen\r\n  \u0060\u0060\u0060\r\n- **Deshabilitar candidatos con impacto alto/medio respetando lista blanca:**\r\n  \u0060\u0060\u0060\r\n  .\\Optimize-Startup.ps1 -CpuThresholdPercent 15 -RamThresholdMB 250 -KeepWindowOpen\r\n  \u0060\u0060\u0060\r\n- **Lista blanca por ruta y umbrales m\u00E1s estrictos:**\r\n  \u0060\u0060\u0060\r\n  .\\Optimize-Startup.ps1 -WhitelistPaths \u0022C:\\Program Files\\Vendor\\App\\app.exe\u0022,\u0022C:\\Tools\\*\u0022 -CpuThresholdPercent 20 -RamThresholdMB 300 -KeepWindowOpen\r\n  \u0060\u0060\u0060\r\n\r\n### Integraci\u00F3n en tu Gestor de Scripts Universal (UI simple)\r\n\r\n- **Controles:**\r\n  - **Inputs num\u00E9ricos:** CpuThresholdPercent, RamThresholdMB, SampleSeconds.\r\n  - **Listas:** WhitelistNames, WhitelistPaths (multi-l\u00EDnea).\r\n  - **Toggles:** DryRun, KeepWindowOpen.\r\n- **Visualizaci\u00F3n:**\r\n  - **Log en vivo:** tail de ExecutionLogPath (muestra tabla y acciones).\r\n  - **Acci\u00F3n:** al presionar \u201CAnalizar\u201D, se listan entradas y, si procede, se abre selecci\u00F3n (Out-GridView). Fallback consola si no est\u00E1 disponible.\r\n  - **Salidas:** enlaces a Audit CSV/JSON y Summary TXT.\r\n\r\n- **Llamada backend (ejemplo):**\r\n  \u0060\u0060\u0060\r\n  $args = @{\r\n    CpuThresholdPercent = 15\r\n    RamThresholdMB = 250\r\n    SampleSeconds = 3\r\n    KeepWindowOpen = $true\r\n  }\r\n  Start-Process powershell -ArgumentList @(\r\n    \u0022-NoProfile\u0022,\u0022-ExecutionPolicy\u0022,\u0022Bypass\u0022,\u0022-File\u0022,\u0022Optimize-Startup.ps1\u0022,\r\n    \u0022-CpuThresholdPercent\u0022,$args.CpuThresholdPercent,\r\n    \u0022-RamThresholdMB\u0022,$args.RamThresholdMB,\r\n    \u0022-SampleSeconds\u0022,$args.SampleSeconds,\r\n    $args.KeepWindowOpen ? \u0022-KeepWindowOpen\u0022 : \u0022\u0022\r\n  ) -Wait\r\n  \u0060\u0060\u0060\r\n\r\n---\r\n\r\n## Pensamiento profundo aplicado\r\n\r\n- **Robustez:**\r\n  - Muestreo de CPU con delta de tiempo real para evitar lecturas instant\u00E1neas enga\u00F1osas; RAM tomada del WorkingSet actual.\r\n  - Idempotencia al deshabilitar: evita duplicados; para Registro, respalda en RunDisabled; para carpeta, mueve a \u201CDisabled\u201D.\r\n  - Lista blanca por nombre y ruta, m\u00E1s entradas cr\u00EDticas comunes (ajustables).\r\n\r\n- **Auditor\u00EDa y trazabilidad:**\r\n  - Cada deshabilitado registra Source y Target (clave de backup o ruta movida), con raz\u00F3n basada en m\u00E9tricas.\r\n  - Logs detallados en consola y archivo; resumen con conteos por acci\u00F3n.\r\n  - DryRun conserva igual auditor\u00EDa, \u00FAtil para revisi\u00F3n previa.\r\n\r\n- **Seguridad:**\r\n  - Rollback simple incorporado: Restore manual desde RunDisabled y carpeta Disabled.\r\n  - Nunca borra ejecutables ni valores sin antes crear backup; usa Remove-ItemProperty solo tras copiar al \u00E1rea de backup.\r\n  - Respeta lista blanca y evita tocar procesos del sistema t\u00EDpicos.\r\n\r\n- **Casos l\u00EDmite:**\r\n  - Rutas con comillas/espacios: parser tolerante para extraer ejecutable.\r\n  - Acceso denegado a MainModule: fallback a b\u00FAsqueda por nombre y captura de errores sin detener.\r\n  - Entradas ya deshabilitadas: se detecta y registra como NotFound/Idempotente.\r\n\r\n- **Escalabilidad:**\r\n  - Parametrizable por rol (perfiles) con listas blancas distintas.\r\n  - Integrable en dashboards con el log en tiempo real y auditor\u00EDas para comparativos entre ejecuciones.\r\n\r\n---\r\n\r\n## Extensiones recomendadas\r\n\r\n- **Mejoras opcionales:**\r\n  - Par\u00E1metro \u0060-Rollback\u0060 para reactivar entradas desde RunDisabled o mover de \u201CDisabled\u201D a su ubicaci\u00F3n original.\r\n  - \u0060-ConfigPath\u0060 (JSON) con pol\u00EDticas por entorno: umbrales, listas blancas y rutas cr\u00EDticas por rol.\r\n  - Reporte comparativo: snapshot de startups antes/despu\u00E9s y diff en CSV.\r\n  - Heur\u00EDstica de impacto extendida: medir tiempo de arranque hist\u00F3rico con eventos de \u0060Diagnostics-Performance\u0060 (EventLog).\r\n  - Notificaciones: enviar resumen por correo/Teams cuando se deshabiliten N entradas o haya errores.\r\n\r\n- **Siguiente paso concreto:**\r\n  - A\u00F1adir \u0060-Rollback\u0060 y \u0060-ConfigPath\u0060 para gesti\u00F3n bidireccional (deshabilitar/rehabilitar) con presets por rol, y exponer en tu Gestor un flujo: Analizar \u2192 Seleccionar \u2192 Confirmar \u2192 Ejecutar \u2192 Resumen/Undo. \u00BFQuieres que lo implemente en la pr\u00F3xima iteraci\u00F3n?\r\n\r\n18. **Gesti\u00F3n de tareas programadas:** Crear, exportar y validar tareas con triggers complejos.  \r\n19. **Configuraci\u00F3n de proxy:** Definir proxy del sistema y excepciones por dominio.  \r\n20. **Descarga automatizada:** Fetch de archivos con reintentos, hashes y reanudaci\u00F3n.  \r\n21. **Comparaci\u00F3n de archivos:** Detectar duplicados por hash y generar informe.  \r\n22. **Ordenar biblioteca:** Renombrar y clasificar documentos/media seg\u00FAn metadatos.  \r\n23. **Extracci\u00F3n de metadatos:** Leer EXIF/PDF/DOCX y exportar a base de datos.  \r\n24. **Compresi\u00F3n inteligente:** Zip por lote con reglas de exclusi\u00F3n y estructura.  \r\n25. **Descompresi\u00F3n masiva:** Extraer m\u00FAltiples archivos preservando jerarqu\u00EDas.  \r\n26. **Plantillas de proyectos:** Generar estructura est\u00E1ndar con README y scripts base.  \r\n27. **Gesti\u00F3n de hosts:** A\u00F1adir/quitar entradas en hosts con registro de cambios.  \r\n28. **DNS flush y pruebas:** Limpiar cach\u00E9 y validar resoluci\u00F3n para dominios clave.  \r\n29. **Ping y conectividad:** Comprobar latencia, p\u00E9rdida y trazar rutas con reporte.  \r\n30. **Pruebas de puertos:** Escanear puertos locales/remotos y validar servicios activos.  \r\n31. **Configuraci\u00F3n de NTP:** Sincronizar hora y verificar drift y \u00FAltima fuente.  \r\n32. **Instalar fuentes:** Copiar y registrar tipograf\u00EDas con verificaci\u00F3n en el sistema.  \r\n33. **Gesti\u00F3n de impresoras:** Agregar colas, drivers y establecer impresora predeterminada.  \r\n34. **Pol\u00EDtica de energ\u00EDa:** Ajustar planes y desactivar suspensi\u00F3n para tareas cr\u00EDticas.  \r\n35. **Gesti\u00F3n de certificados:** Importar/exportar, renovar y validar cadenas de confianza.  \r\n36. **Firma de scripts:** Firmar .ps1 y aplicar ExecutionPolicy seguro por \u00E1mbito.  \r\n37. **Control de ExecutionPolicy:** Establecer por usuario/m\u00E1quina y auditar excepciones.  \r\n38. **UI de instalaci\u00F3n:** WinForms/WPF para instaladores con progreso y logs.  \r\n39. **Selector de iconos:** Asignar iconos din\u00E1micos a accesos directos seg\u00FAn estado.  \r\n40. **Men\u00FA de acciones r\u00E1pidas:** Lanzador universal para tareas y scripts paralelos.  \r\n41. **Colas y paralelismo:** Ejecutar jobs en paralelo con l\u00EDmites y cancelaci\u00F3n segura.  \r\n42. **Gesti\u00F3n de credenciales:** Guardar en CredentialManager o DPAPI con rotaci\u00F3n.  \r\n43. **Encriptaci\u00F3n de archivos:** Proteger datos sensibles con AES y claves por entorno.  \r\n44. **Scraping liviano:** Extraer datos de p\u00E1ginas y generar reportes CSV.  \r\n45. **Notificaciones toast:** Alertas visuales con \u00EDconos y niveles de severidad.  \r\n46. **Email automatizado:** Enviar informes con adjuntos, plantillas y DKIM opcional.  \r\n47. **Webhook dispatcher:** Publicar eventos a endpoints (Slack, Teams, Discord).  \r\n48. **REST API client:** CRUD contra APIs con autenticaci\u00F3n y manejo de errores.  \r\n49. **Generaci\u00F3n de documentaci\u00F3n:** Crear Markdown/HTML desde metadatos de scripts.  \r\n50. **Changelog autom\u00E1tico:** Construir notas de versi\u00F3n desde commits o diffs.  \r\n51. **Gesti\u00F3n de perfiles PowerShell:** Inicializar m\u00F3dulos, aliases y temas por rol.  \r\n52. **Instalaci\u00F3n de m\u00F3dulos:** Resolver dependencias con PSGallery y fuentes privadas.  \r\n53. **Pruebas Pester:** Ejecutar tests unitarios y publicar resultados.  \r\n54. **Linting de c\u00F3digo:** Validar estilo y seguridad con reglas personalizadas.  \r\n55. **Plantillas de UI:** Aplicar paletas, tipograf\u00EDas e \u00EDconos coherentes a WinForms.  \r\n56. **Tema claro/oscuro:** Toggle de tema con persistencia y contraste accesible.  \r\n57. **Logs estructurados:** Salida JSON con correlaci\u00F3n de operaci\u00F3n e ID de sesi\u00F3n.  \r\n58. **Gesti\u00F3n de errores:** Try/catch centralizado con reintentos y circuit breaker.  \r\n59. **Feature flags:** Activar funciones por entorno o usuario con toggles persistentes.  \r\n60. **Perfilado de rendimiento:** Medir tiempo por bloque y generar flame-like report.  \r\n61. **C\u00E1lculo de hashes:** MD5/SHA256 para verificaci\u00F3n de integridad en lote.  \r\n62. **Control de versiones de archivos:** Guardar snapshots y diffs con metadatos.  \r\n63. **Renombrado masivo:** Reglas por patr\u00F3n, numeraci\u00F3n y normalizaci\u00F3n de caracteres.  \r\n64. **Conversi\u00F3n de formatos:** CSV\u2194JSON\u2194XML con validaci\u00F3n de esquema.  \r\n65. **Parsing de logs:** Extraer eventos clave y agregaciones con expresiones regulares.  \r\n66. **Auditor\u00EDa de permisos:** Listar ACL y detectar herencias peligrosas.  \r\n67. **Correcci\u00F3n de ACL:** Aplicar plantillas de permisos por carpeta/proyecto.  \r\n68. **Bloqueo de dispositivos USB:** Pol\u00EDticas de acceso por ID y excepciones.  \r\n69. **Monitoreo de eventos:** Suscripci\u00F3n a EventLog y alertas en tiempo real.  \r\n70. **Health check de apps:** Validar procesos, puertos y archivos de configuraci\u00F3n.  \r\n71. **Instalador portable:** Empaquetar binarios con rutas relativas e iconos.  \r\n72. **Desinstalaci\u00F3n limpia:** Remover apps y residuos (carpetas, servicios, tareas).  \r\n73. **Provisioning de m\u00E1quina nueva:** Secuencia completa de drivers, apps y ajustes.  \r\n74. **Reset de red:** Renovar IP, limpiar stack y reconfigurar adaptadores.  \r\n75. **Pol\u00EDtica de actualizaciones:** Pausar, programar y forzar Windows Update con reportes.  \r\n76. **Telemetr\u00EDa local:** Recoger m\u00E9tricas de uso y enviar a un endpoint interno.  \r\n77. **Gesti\u00F3n de sesiones RDP:** Habilitar, auditar y cerrar sesiones inactivas.  \r\n78. **Control de puertos USB serie:** Detectar y mapear COM para dispositivos espec\u00EDficos.  \r\n79. **Gesti\u00F3n de SQLite:** CRUD local para cat\u00E1logos y configuraciones portables.  \r\n80. **Plantillas de accesos directos:** Crear LNK/URL con iconos, argumentos y scope.  \r\n81. **Validador de enlaces:** Comprobar disponibilidad de URLs y reportar rotos.  \r\n82. **Generaci\u00F3n de QR:** Crear c\u00F3digos para enlaces, Wi-Fi o configuraci\u00F3n r\u00E1pida.  \r\n83. **Cat\u00E1logo de iconos:** Previsualizar packs y asignar por categor\u00EDa o estado.  \r\n84. **Buscador universal:** Indexar rutas y ejecutar acciones con fuzzy search.  \r\n85. **Gesti\u00F3n de perfiles de Git:** Config global/local, SSH y firma de commits.  \r\n86. **Build pipeline local:** Compilar, testear y empaquetar proyectos con pasos orquestados.  \r\n87. **Distribuci\u00F3n por lotes:** Copiar apps a m\u00FAltiples m\u00E1quinas con validaci\u00F3n remota.  \r\n88. **Remoting seguro:** Ejecutar tareas en equipos remotos con credenciales rotadas.  \r\n89. **Generaci\u00F3n de reportes ejecutivos:** Res\u00FAmenes gr\u00E1ficos (HTML) de estado y progreso.  \r\n90. **Control de calidad de datos:** Validar esquemas y reglas antes de importar/exportar.  \r\n91. **Normalizaci\u00F3n de nombres:** Quitar acentos, espacios y s\u00EDmbolos para compatibilidad.  \r\n92. **Gesti\u00F3n de cach\u00E9 de build:** Reusar artefactos si hashes coinciden.  \r\n93. **Simulaci\u00F3n de fallos:** Probar resiliencia de scripts bajo errores controlados.  \r\n94. **Auto-actualizaci\u00F3n de scripts:** Chequear releases y actualizar .ps1 con firma.  \r\n95. **M\u00F3dulo de utilidades comunes:** Librer\u00EDa compartida para logs, errores y UI.  \r\n96. **Wizard de configuraci\u00F3n:** Paso a paso con validaciones y previsualizaci\u00F3n.  \r\n97. **Control de versiones sem\u00E1nticas:** Incremento autom\u00E1tico de MAJOR/MINOR/PATCH.  \r\n98. **Plantillas de documentaci\u00F3n UI:** Capturas, paletas y justificaci\u00F3n de dise\u00F1o.  \r\n99. **Orquestaci\u00F3n paralela segura:** Jobs con aislamiento, timeouts y reintentos por tarea.  \r\n100. **Distribuci\u00F3n con branding:** Generar instaladores y lanzadores con identidad visual consistente.\r\n\r\n# Gestor de Scripts Universal\r\n\r\nActualmente este repositorio contiene **17 herramientas funcionales** en formato \u0060.ps1\u0060, ya organizadas por categor\u00EDas (instalaci\u00F3n, seguridad, red, backup, UI, etc.).\r\n\r\n\uD83D\uDEA7 **Estado del proyecto:**  \r\nA\u00FAn faltan **83 herramientas adicionales** que se encuentran en desarrollo. Todas ellas tambi\u00E9n estar\u00E1n implementadas como scripts \u0060.ps1\u0060, siguiendo la misma estructura modular y escalable.\r\n\r\n\uD83D\uDD13 **Licencia y filosof\u00EDa:**  \r\nEste software ser\u00E1 de **c\u00F3digo libre**, con el objetivo de que cualquier persona pueda revisarlo, adaptarlo y mejorarlo. La idea es construir un ecosistema abierto, auditable y en constante evoluci\u00F3n.\r\n\r\n---\r\n"
  }
]